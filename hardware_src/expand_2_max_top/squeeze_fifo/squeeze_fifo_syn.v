// megafunction wizard: %FIFO%
// GENERATION: STANDARD
// VERSION: WM1.0
// MODULE: dcfifo_mixed_widths 

// ============================================================
// File Name: squeeze_fifo.v
// Megafunction Name(s):
// 			dcfifo_mixed_widths
//
// Simulation Library Files(s):
// 			
// ============================================================
// ************************************************************
// THIS IS A WIZARD-GENERATED FILE. DO NOT EDIT THIS FILE!
//
// 17.1.0 Build 590 10/25/2017 SJ Standard Edition
// ************************************************************


//Copyright (C) 2017  Intel Corporation. All rights reserved.
//Your use of Intel Corporation's design tools, logic functions 
//and other software and tools, and its AMPP partner logic 
//functions, and any output files from any of the foregoing 
//(including device programming or simulation files), and any 
//associated documentation or information are expressly subject 
//to the terms and conditions of the Intel Program License 
//Subscription Agreement, the Intel Quartus Prime License Agreement,
//the Intel FPGA IP License Agreement, or other applicable license
//agreement, including, without limitation, that your use is for
//the sole purpose of programming logic devices manufactured by
//Intel and sold by Intel or its authorized distributors.  Please
//refer to the applicable agreement for further details.


//dcfifo_mixed_widths DEVICE_FAMILY="Cyclone V" LPM_NUMWORDS=512 LPM_SHOWAHEAD="OFF" LPM_WIDTH=48 LPM_WIDTH_R=96 LPM_WIDTHU=9 LPM_WIDTHU_R=8 OVERFLOW_CHECKING="ON" RDSYNC_DELAYPIPE=3 READ_ACLR_SYNCH="ON" UNDERFLOW_CHECKING="ON" USE_EAB="ON" WRITE_ACLR_SYNCH="ON" WRSYNC_DELAYPIPE=3 aclr data q rdclk rdempty rdreq wrclk wrreq wrusedw INTENDED_DEVICE_FAMILY="Cyclone V" ALTERA_INTERNAL_OPTIONS=AUTO_SHIFT_REGISTER_RECOGNITION=OFF
//VERSION_BEGIN 17.1 cbx_a_gray2bin 2017:10:19:05:46:40:SJ cbx_a_graycounter 2017:10:19:05:46:40:SJ cbx_altdpram 2017:10:19:05:46:40:SJ cbx_altera_counter 2017:10:19:05:46:40:SJ cbx_altera_gray_counter 2017:10:19:05:46:40:SJ cbx_altera_syncram 2017:10:19:05:46:40:SJ cbx_altera_syncram_nd_impl 2017:10:19:05:46:40:SJ cbx_altsyncram 2017:10:19:05:46:40:SJ cbx_cycloneii 2017:10:19:05:46:40:SJ cbx_dcfifo 2017:10:19:05:46:40:SJ cbx_fifo_common 2017:10:19:05:46:40:SJ cbx_lpm_add_sub 2017:10:19:05:46:40:SJ cbx_lpm_compare 2017:10:19:05:46:40:SJ cbx_lpm_counter 2017:10:19:05:46:40:SJ cbx_lpm_decode 2017:10:19:05:46:40:SJ cbx_lpm_mux 2017:10:19:05:46:40:SJ cbx_mgl 2017:10:19:06:38:12:SJ cbx_nadder 2017:10:19:05:46:40:SJ cbx_scfifo 2017:10:19:05:46:40:SJ cbx_stratix 2017:10:19:05:46:40:SJ cbx_stratixii 2017:10:19:05:46:40:SJ cbx_stratixiii 2017:10:19:05:46:40:SJ cbx_stratixv 2017:10:19:05:46:40:SJ cbx_util_mgl 2017:10:19:05:46:40:SJ  VERSION_END
// synthesis VERILOG_INPUT_VERSION VERILOG_2001
// altera message_off 10463



//a_gray2bin device_family="Cyclone V" WIDTH=9 bin gray
//VERSION_BEGIN 17.1 cbx_a_gray2bin 2017:10:19:05:46:40:SJ cbx_mgl 2017:10:19:06:38:12:SJ  VERSION_END

//synthesis_resources = 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
module  squeeze_fifo_a_gray2bin
	( 
	bin,
	gray) /* synthesis synthesis_clearbox=1 */;
	output   [8:0]  bin;
	input   [8:0]  gray;

	wire  xor0;
	wire  xor1;
	wire  xor2;
	wire  xor3;
	wire  xor4;
	wire  xor5;
	wire  xor6;
	wire  xor7;

	assign
		bin = {gray[8], xor7, xor6, xor5, xor4, xor3, xor2, xor1, xor0},
		xor0 = (gray[0] ^ xor1),
		xor1 = (gray[1] ^ xor2),
		xor2 = (gray[2] ^ xor3),
		xor3 = (gray[3] ^ xor4),
		xor4 = (gray[4] ^ xor5),
		xor5 = (gray[5] ^ xor6),
		xor6 = (gray[6] ^ xor7),
		xor7 = (gray[8] ^ gray[7]);
endmodule //squeeze_fifo_a_gray2bin


//a_graycounter DEVICE_FAMILY="Cyclone V" PVALUE=1 WIDTH=9 aclr clock cnt_en q
//VERSION_BEGIN 17.1 cbx_a_gray2bin 2017:10:19:05:46:40:SJ cbx_a_graycounter 2017:10:19:05:46:40:SJ cbx_cycloneii 2017:10:19:05:46:40:SJ cbx_mgl 2017:10:19:06:38:12:SJ cbx_stratix 2017:10:19:05:46:40:SJ cbx_stratixii 2017:10:19:05:46:40:SJ  VERSION_END

//synthesis_resources = reg 12 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
(* ALTERA_ATTRIBUTE = {"{-to counter3a[0]} POWER_UP_LEVEL=HIGH"} *)
module  squeeze_fifo_a_graycounter
	( 
	aclr,
	clock,
	cnt_en,
	q) /* synthesis synthesis_clearbox=1 */;
	input   aclr;
	input   clock;
	input   cnt_en;
	output   [8:0]  q;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_off
`endif
	tri0   aclr;
	tri1   cnt_en;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_on
`endif

	reg	[8:0]	counter3a;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=HIGH"} *)
	reg	parity4;
	reg	[1:0]	sub_parity5a;
	wire  [8:0]  cntr_cout;
	wire  parity_cout;
	wire sclr;
	wire updown;

	// synopsys translate_off
	initial
		counter3a[0:0] = {1{1'b1}};
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) counter3a[0:0] <= {1{1'b1}};
		else
			if (sclr == 1'b1) counter3a[0:0] <= 1'b0;
			else  counter3a[0:0] <= ((cnt_en & (counter3a[0:0] ^ (~ parity_cout))) | ((~ cnt_en) & counter3a[0:0]));
	// synopsys translate_off
	initial
		counter3a[1:1] = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) counter3a[1:1] <= 1'b0;
		else
			if (sclr == 1'b1) counter3a[1:1] <= 1'b0;
			else  counter3a[1:1] <= (counter3a[1:1] ^ (counter3a[0:0] & cntr_cout[0]));
	// synopsys translate_off
	initial
		counter3a[2:2] = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) counter3a[2:2] <= 1'b0;
		else
			if (sclr == 1'b1) counter3a[2:2] <= 1'b0;
			else  counter3a[2:2] <= (counter3a[2:2] ^ (counter3a[1:1] & cntr_cout[1]));
	// synopsys translate_off
	initial
		counter3a[3:3] = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) counter3a[3:3] <= 1'b0;
		else
			if (sclr == 1'b1) counter3a[3:3] <= 1'b0;
			else  counter3a[3:3] <= (counter3a[3:3] ^ (counter3a[2:2] & cntr_cout[2]));
	// synopsys translate_off
	initial
		counter3a[4:4] = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) counter3a[4:4] <= 1'b0;
		else
			if (sclr == 1'b1) counter3a[4:4] <= 1'b0;
			else  counter3a[4:4] <= (counter3a[4:4] ^ (counter3a[3:3] & cntr_cout[3]));
	// synopsys translate_off
	initial
		counter3a[5:5] = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) counter3a[5:5] <= 1'b0;
		else
			if (sclr == 1'b1) counter3a[5:5] <= 1'b0;
			else  counter3a[5:5] <= (counter3a[5:5] ^ (counter3a[4:4] & cntr_cout[4]));
	// synopsys translate_off
	initial
		counter3a[6:6] = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) counter3a[6:6] <= 1'b0;
		else
			if (sclr == 1'b1) counter3a[6:6] <= 1'b0;
			else  counter3a[6:6] <= (counter3a[6:6] ^ (counter3a[5:5] & cntr_cout[5]));
	// synopsys translate_off
	initial
		counter3a[7:7] = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) counter3a[7:7] <= 1'b0;
		else
			if (sclr == 1'b1) counter3a[7:7] <= 1'b0;
			else  counter3a[7:7] <= (counter3a[7:7] ^ (counter3a[6:6] & cntr_cout[6]));
	// synopsys translate_off
	initial
		counter3a[8:8] = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) counter3a[8:8] <= 1'b0;
		else
			if (sclr == 1'b1) counter3a[8:8] <= 1'b0;
			else  counter3a[8:8] <= (counter3a[8:8] ^ cntr_cout[7]);
	// synopsys translate_off
	initial
		parity4 = {1{1'b1}};
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) parity4 <= {1{1'b1}};
		else
			if (sclr == 1'b1) parity4 <= 1'b0;
			else  parity4 <= ((cnt_en & (sub_parity5a[0] ^ sub_parity5a[1])) | ((~ cnt_en) & parity4));
	// synopsys translate_off
	initial
		sub_parity5a[0:0] = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) sub_parity5a[0:0] <= 1'b0;
		else
			if (sclr == 1'b1) sub_parity5a[0:0] <= 1'b0;
			else  sub_parity5a[0:0] <= ((cnt_en & (((((counter3a[0] ^ counter3a[1]) ^ counter3a[2]) ^ counter3a[3]) ^ counter3a[4]) ^ counter3a[5])) | ((~ cnt_en) & sub_parity5a[0:0]));
	// synopsys translate_off
	initial
		sub_parity5a[1:1] = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) sub_parity5a[1:1] <= 1'b0;
		else
			if (sclr == 1'b1) sub_parity5a[1:1] <= 1'b0;
			else  sub_parity5a[1:1] <= ((cnt_en & ((counter3a[6] ^ counter3a[7]) ^ counter3a[8])) | ((~ cnt_en) & sub_parity5a[1:1]));
	assign
		cntr_cout = {1'b0, (cntr_cout[6] & (~ counter3a[6:6])), (cntr_cout[5] & (~ counter3a[5:5])), (cntr_cout[4] & (~ counter3a[4:4])), (cntr_cout[3] & (~ counter3a[3:3])), (cntr_cout[2] & (~ counter3a[2:2])), (cntr_cout[1] & (~ counter3a[1:1])), (cntr_cout[0] & (~ counter3a[0:0])), (cnt_en & parity_cout)},
		parity_cout = (((~ parity4) ^ updown) & cnt_en),
		q = counter3a,
		sclr = 1'b0,
		updown = 1'b1;
endmodule //squeeze_fifo_a_graycounter


//a_graycounter DEVICE_FAMILY="Cyclone V" PVALUE=0 WIDTH=9 aclr clock cnt_en q ALTERA_INTERNAL_OPTIONS=suppress_da_rule_internal=S102
//VERSION_BEGIN 17.1 cbx_a_gray2bin 2017:10:19:05:46:40:SJ cbx_a_graycounter 2017:10:19:05:46:40:SJ cbx_cycloneii 2017:10:19:05:46:40:SJ cbx_mgl 2017:10:19:06:38:12:SJ cbx_stratix 2017:10:19:05:46:40:SJ cbx_stratixii 2017:10:19:05:46:40:SJ  VERSION_END

//synthesis_resources = reg 12 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
(* ALTERA_ATTRIBUTE = {"suppress_da_rule_internal=S102;{-to sub_parity7a[0]} POWER_UP_LEVEL=HIGH"} *)
module  squeeze_fifo_a_graycounter1
	( 
	aclr,
	clock,
	cnt_en,
	q) /* synthesis synthesis_clearbox=1 */;
	input   aclr;
	input   clock;
	input   cnt_en;
	output   [8:0]  q;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_off
`endif
	tri0   aclr;
	tri1   cnt_en;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_on
`endif

	reg	[8:0]	counter8a;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	parity6;
	reg	[1:0]	sub_parity7a;
	wire  [8:0]  cntr_cout;
	wire  parity_cout;
	wire sclr;
	wire updown;

	// synopsys translate_off
	initial
		counter8a[0:0] = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) counter8a[0:0] <= 1'b0;
		else
			if (sclr == 1'b1) counter8a[0:0] <= 1'b0;
			else  counter8a[0:0] <= ((cnt_en & (counter8a[0:0] ^ (~ parity_cout))) | ((~ cnt_en) & counter8a[0:0]));
	// synopsys translate_off
	initial
		counter8a[1:1] = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) counter8a[1:1] <= 1'b0;
		else
			if (sclr == 1'b1) counter8a[1:1] <= 1'b0;
			else  counter8a[1:1] <= (counter8a[1:1] ^ (counter8a[0:0] & cntr_cout[0]));
	// synopsys translate_off
	initial
		counter8a[2:2] = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) counter8a[2:2] <= 1'b0;
		else
			if (sclr == 1'b1) counter8a[2:2] <= 1'b0;
			else  counter8a[2:2] <= (counter8a[2:2] ^ (counter8a[1:1] & cntr_cout[1]));
	// synopsys translate_off
	initial
		counter8a[3:3] = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) counter8a[3:3] <= 1'b0;
		else
			if (sclr == 1'b1) counter8a[3:3] <= 1'b0;
			else  counter8a[3:3] <= (counter8a[3:3] ^ (counter8a[2:2] & cntr_cout[2]));
	// synopsys translate_off
	initial
		counter8a[4:4] = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) counter8a[4:4] <= 1'b0;
		else
			if (sclr == 1'b1) counter8a[4:4] <= 1'b0;
			else  counter8a[4:4] <= (counter8a[4:4] ^ (counter8a[3:3] & cntr_cout[3]));
	// synopsys translate_off
	initial
		counter8a[5:5] = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) counter8a[5:5] <= 1'b0;
		else
			if (sclr == 1'b1) counter8a[5:5] <= 1'b0;
			else  counter8a[5:5] <= (counter8a[5:5] ^ (counter8a[4:4] & cntr_cout[4]));
	// synopsys translate_off
	initial
		counter8a[6:6] = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) counter8a[6:6] <= 1'b0;
		else
			if (sclr == 1'b1) counter8a[6:6] <= 1'b0;
			else  counter8a[6:6] <= (counter8a[6:6] ^ (counter8a[5:5] & cntr_cout[5]));
	// synopsys translate_off
	initial
		counter8a[7:7] = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) counter8a[7:7] <= 1'b0;
		else
			if (sclr == 1'b1) counter8a[7:7] <= 1'b0;
			else  counter8a[7:7] <= (counter8a[7:7] ^ (counter8a[6:6] & cntr_cout[6]));
	// synopsys translate_off
	initial
		counter8a[8:8] = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) counter8a[8:8] <= 1'b0;
		else
			if (sclr == 1'b1) counter8a[8:8] <= 1'b0;
			else  counter8a[8:8] <= (counter8a[8:8] ^ cntr_cout[7]);
	// synopsys translate_off
	initial
		parity6 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) parity6 <= 1'b0;
		else
			if (sclr == 1'b1) parity6 <= 1'b0;
			else  parity6 <= ((cnt_en & (sub_parity7a[0] ^ sub_parity7a[1])) | ((~ cnt_en) & parity6));
	// synopsys translate_off
	initial
		sub_parity7a[0:0] = {1{1'b1}};
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) sub_parity7a[0:0] <= {1{1'b1}};
		else
			if (sclr == 1'b1) sub_parity7a[0:0] <= 1'b0;
			else  sub_parity7a[0:0] <= ((cnt_en & (((((counter8a[0] ^ counter8a[1]) ^ counter8a[2]) ^ counter8a[3]) ^ counter8a[4]) ^ counter8a[5])) | ((~ cnt_en) & sub_parity7a[0:0]));
	// synopsys translate_off
	initial
		sub_parity7a[1:1] = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) sub_parity7a[1:1] <= 1'b0;
		else
			if (sclr == 1'b1) sub_parity7a[1:1] <= 1'b0;
			else  sub_parity7a[1:1] <= ((cnt_en & ((counter8a[6] ^ counter8a[7]) ^ counter8a[8])) | ((~ cnt_en) & sub_parity7a[1:1]));
	assign
		cntr_cout = {1'b0, (cntr_cout[6] & (~ counter8a[6:6])), (cntr_cout[5] & (~ counter8a[5:5])), (cntr_cout[4] & (~ counter8a[4:4])), (cntr_cout[3] & (~ counter8a[3:3])), (cntr_cout[2] & (~ counter8a[2:2])), (cntr_cout[1] & (~ counter8a[1:1])), (cntr_cout[0] & (~ counter8a[0:0])), (cnt_en & parity_cout)},
		parity_cout = ((parity6 ^ (~ updown)) & cnt_en),
		q = counter8a,
		sclr = 1'b0,
		updown = 1'b1;
endmodule //squeeze_fifo_a_graycounter1


//altsyncram ADDRESS_ACLR_B="CLEAR1" ADDRESS_REG_B="CLOCK1" CLOCK_ENABLE_INPUT_B="BYPASS" DEVICE_FAMILY="Cyclone V" OPERATION_MODE="DUAL_PORT" OUTDATA_ACLR_B="CLEAR1" OUTDATA_REG_B="CLOCK1" WIDTH_A=48 WIDTH_B=96 WIDTH_BYTEENA_A=1 WIDTHAD_A=9 WIDTHAD_B=8 aclr1 address_a address_b addressstall_b clock0 clock1 clocken1 data_a q_b wren_a
//VERSION_BEGIN 17.1 cbx_altera_syncram_nd_impl 2017:10:19:05:46:40:SJ cbx_altsyncram 2017:10:19:05:46:40:SJ cbx_cycloneii 2017:10:19:05:46:40:SJ cbx_lpm_add_sub 2017:10:19:05:46:40:SJ cbx_lpm_compare 2017:10:19:05:46:40:SJ cbx_lpm_decode 2017:10:19:05:46:40:SJ cbx_lpm_mux 2017:10:19:05:46:40:SJ cbx_mgl 2017:10:19:06:38:12:SJ cbx_nadder 2017:10:19:05:46:40:SJ cbx_stratix 2017:10:19:05:46:40:SJ cbx_stratixii 2017:10:19:05:46:40:SJ cbx_stratixiii 2017:10:19:05:46:40:SJ cbx_stratixv 2017:10:19:05:46:40:SJ cbx_util_mgl 2017:10:19:05:46:40:SJ  VERSION_END

//synthesis_resources = M10K 3 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
(* ALTERA_ATTRIBUTE = {"OPTIMIZE_POWER_DURING_SYNTHESIS=NORMAL_COMPILATION"} *)
module  squeeze_fifo_altsyncram
	( 
	aclr1,
	address_a,
	address_b,
	addressstall_b,
	clock0,
	clock1,
	clocken1,
	data_a,
	q_b,
	wren_a) /* synthesis synthesis_clearbox=1 */;
	input   aclr1;
	input   [8:0]  address_a;
	input   [7:0]  address_b;
	input   addressstall_b;
	input   clock0;
	input   clock1;
	input   clocken1;
	input   [47:0]  data_a;
	output   [95:0]  q_b;
	input   wren_a;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_off
`endif
	tri0   aclr1;
	tri1   [7:0]  address_b;
	tri0   addressstall_b;
	tri1   clock0;
	tri1   clock1;
	tri1   clocken1;
	tri1   [47:0]  data_a;
	tri0   wren_a;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_on
`endif

	wire  [1:0]   wire_ram_block9a_0portbdataout;
	wire  [1:0]   wire_ram_block9a_1portbdataout;
	wire  [1:0]   wire_ram_block9a_2portbdataout;
	wire  [1:0]   wire_ram_block9a_3portbdataout;
	wire  [1:0]   wire_ram_block9a_4portbdataout;
	wire  [1:0]   wire_ram_block9a_5portbdataout;
	wire  [1:0]   wire_ram_block9a_6portbdataout;
	wire  [1:0]   wire_ram_block9a_7portbdataout;
	wire  [1:0]   wire_ram_block9a_8portbdataout;
	wire  [1:0]   wire_ram_block9a_9portbdataout;
	wire  [1:0]   wire_ram_block9a_10portbdataout;
	wire  [1:0]   wire_ram_block9a_11portbdataout;
	wire  [1:0]   wire_ram_block9a_12portbdataout;
	wire  [1:0]   wire_ram_block9a_13portbdataout;
	wire  [1:0]   wire_ram_block9a_14portbdataout;
	wire  [1:0]   wire_ram_block9a_15portbdataout;
	wire  [1:0]   wire_ram_block9a_16portbdataout;
	wire  [1:0]   wire_ram_block9a_17portbdataout;
	wire  [1:0]   wire_ram_block9a_18portbdataout;
	wire  [1:0]   wire_ram_block9a_19portbdataout;
	wire  [1:0]   wire_ram_block9a_20portbdataout;
	wire  [1:0]   wire_ram_block9a_21portbdataout;
	wire  [1:0]   wire_ram_block9a_22portbdataout;
	wire  [1:0]   wire_ram_block9a_23portbdataout;
	wire  [1:0]   wire_ram_block9a_24portbdataout;
	wire  [1:0]   wire_ram_block9a_25portbdataout;
	wire  [1:0]   wire_ram_block9a_26portbdataout;
	wire  [1:0]   wire_ram_block9a_27portbdataout;
	wire  [1:0]   wire_ram_block9a_28portbdataout;
	wire  [1:0]   wire_ram_block9a_29portbdataout;
	wire  [1:0]   wire_ram_block9a_30portbdataout;
	wire  [1:0]   wire_ram_block9a_31portbdataout;
	wire  [1:0]   wire_ram_block9a_32portbdataout;
	wire  [1:0]   wire_ram_block9a_33portbdataout;
	wire  [1:0]   wire_ram_block9a_34portbdataout;
	wire  [1:0]   wire_ram_block9a_35portbdataout;
	wire  [1:0]   wire_ram_block9a_36portbdataout;
	wire  [1:0]   wire_ram_block9a_37portbdataout;
	wire  [1:0]   wire_ram_block9a_38portbdataout;
	wire  [1:0]   wire_ram_block9a_39portbdataout;
	wire  [1:0]   wire_ram_block9a_40portbdataout;
	wire  [1:0]   wire_ram_block9a_41portbdataout;
	wire  [1:0]   wire_ram_block9a_42portbdataout;
	wire  [1:0]   wire_ram_block9a_43portbdataout;
	wire  [1:0]   wire_ram_block9a_44portbdataout;
	wire  [1:0]   wire_ram_block9a_45portbdataout;
	wire  [1:0]   wire_ram_block9a_46portbdataout;
	wire  [1:0]   wire_ram_block9a_47portbdataout;
	wire  [8:0]  address_a_wire;
	wire  [7:0]  address_b_wire;

	cyclonev_ram_block   ram_block9a_0
	( 
	.clk0(clock0),
	.clk1(clock1),
	.clr1(aclr1),
	.dftout(),
	.eccstatus(),
	.ena0(wren_a),
	.ena1(clocken1),
	.portaaddr({address_a_wire[8:0]}),
	.portadatain({data_a[0]}),
	.portadataout(),
	.portawe(wren_a),
	.portbaddr({address_b_wire[7:0]}),
	.portbaddrstall(addressstall_b),
	.portbdataout(wire_ram_block9a_0portbdataout[1:0]),
	.portbre(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portare(1'b1),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({2{1'b0}}),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1),
	.nerror(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block9a_0.clk0_core_clock_enable = "ena0",
		ram_block9a_0.clk0_input_clock_enable = "none",
		ram_block9a_0.clk1_core_clock_enable = "none",
		ram_block9a_0.clk1_input_clock_enable = "none",
		ram_block9a_0.clk1_output_clock_enable = "ena1",
		ram_block9a_0.connectivity_checking = "OFF",
		ram_block9a_0.data_interleave_offset_in_bits = 48,
		ram_block9a_0.data_interleave_width_in_bits = 1,
		ram_block9a_0.logical_ram_name = "ALTSYNCRAM",
		ram_block9a_0.mixed_port_feed_through_mode = "dont_care",
		ram_block9a_0.operation_mode = "dual_port",
		ram_block9a_0.port_a_address_width = 9,
		ram_block9a_0.port_a_data_width = 1,
		ram_block9a_0.port_a_first_address = 0,
		ram_block9a_0.port_a_first_bit_number = 0,
		ram_block9a_0.port_a_last_address = 511,
		ram_block9a_0.port_a_logical_ram_depth = 512,
		ram_block9a_0.port_a_logical_ram_width = 48,
		ram_block9a_0.port_b_address_clear = "clear1",
		ram_block9a_0.port_b_address_clock = "clock1",
		ram_block9a_0.port_b_address_width = 8,
		ram_block9a_0.port_b_data_out_clear = "clear1",
		ram_block9a_0.port_b_data_out_clock = "clock1",
		ram_block9a_0.port_b_data_width = 2,
		ram_block9a_0.port_b_first_address = 0,
		ram_block9a_0.port_b_first_bit_number = 0,
		ram_block9a_0.port_b_last_address = 255,
		ram_block9a_0.port_b_logical_ram_depth = 256,
		ram_block9a_0.port_b_logical_ram_width = 96,
		ram_block9a_0.port_b_read_enable_clock = "clock1",
		ram_block9a_0.ram_block_type = "AUTO",
		ram_block9a_0.lpm_type = "cyclonev_ram_block";
	cyclonev_ram_block   ram_block9a_1
	( 
	.clk0(clock0),
	.clk1(clock1),
	.clr1(aclr1),
	.dftout(),
	.eccstatus(),
	.ena0(wren_a),
	.ena1(clocken1),
	.portaaddr({address_a_wire[8:0]}),
	.portadatain({data_a[1]}),
	.portadataout(),
	.portawe(wren_a),
	.portbaddr({address_b_wire[7:0]}),
	.portbaddrstall(addressstall_b),
	.portbdataout(wire_ram_block9a_1portbdataout[1:0]),
	.portbre(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portare(1'b1),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({2{1'b0}}),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1),
	.nerror(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block9a_1.clk0_core_clock_enable = "ena0",
		ram_block9a_1.clk0_input_clock_enable = "none",
		ram_block9a_1.clk1_core_clock_enable = "none",
		ram_block9a_1.clk1_input_clock_enable = "none",
		ram_block9a_1.clk1_output_clock_enable = "ena1",
		ram_block9a_1.connectivity_checking = "OFF",
		ram_block9a_1.data_interleave_offset_in_bits = 48,
		ram_block9a_1.data_interleave_width_in_bits = 1,
		ram_block9a_1.logical_ram_name = "ALTSYNCRAM",
		ram_block9a_1.mixed_port_feed_through_mode = "dont_care",
		ram_block9a_1.operation_mode = "dual_port",
		ram_block9a_1.port_a_address_width = 9,
		ram_block9a_1.port_a_data_width = 1,
		ram_block9a_1.port_a_first_address = 0,
		ram_block9a_1.port_a_first_bit_number = 1,
		ram_block9a_1.port_a_last_address = 511,
		ram_block9a_1.port_a_logical_ram_depth = 512,
		ram_block9a_1.port_a_logical_ram_width = 48,
		ram_block9a_1.port_b_address_clear = "clear1",
		ram_block9a_1.port_b_address_clock = "clock1",
		ram_block9a_1.port_b_address_width = 8,
		ram_block9a_1.port_b_data_out_clear = "clear1",
		ram_block9a_1.port_b_data_out_clock = "clock1",
		ram_block9a_1.port_b_data_width = 2,
		ram_block9a_1.port_b_first_address = 0,
		ram_block9a_1.port_b_first_bit_number = 1,
		ram_block9a_1.port_b_last_address = 255,
		ram_block9a_1.port_b_logical_ram_depth = 256,
		ram_block9a_1.port_b_logical_ram_width = 96,
		ram_block9a_1.port_b_read_enable_clock = "clock1",
		ram_block9a_1.ram_block_type = "AUTO",
		ram_block9a_1.lpm_type = "cyclonev_ram_block";
	cyclonev_ram_block   ram_block9a_2
	( 
	.clk0(clock0),
	.clk1(clock1),
	.clr1(aclr1),
	.dftout(),
	.eccstatus(),
	.ena0(wren_a),
	.ena1(clocken1),
	.portaaddr({address_a_wire[8:0]}),
	.portadatain({data_a[2]}),
	.portadataout(),
	.portawe(wren_a),
	.portbaddr({address_b_wire[7:0]}),
	.portbaddrstall(addressstall_b),
	.portbdataout(wire_ram_block9a_2portbdataout[1:0]),
	.portbre(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portare(1'b1),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({2{1'b0}}),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1),
	.nerror(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block9a_2.clk0_core_clock_enable = "ena0",
		ram_block9a_2.clk0_input_clock_enable = "none",
		ram_block9a_2.clk1_core_clock_enable = "none",
		ram_block9a_2.clk1_input_clock_enable = "none",
		ram_block9a_2.clk1_output_clock_enable = "ena1",
		ram_block9a_2.connectivity_checking = "OFF",
		ram_block9a_2.data_interleave_offset_in_bits = 48,
		ram_block9a_2.data_interleave_width_in_bits = 1,
		ram_block9a_2.logical_ram_name = "ALTSYNCRAM",
		ram_block9a_2.mixed_port_feed_through_mode = "dont_care",
		ram_block9a_2.operation_mode = "dual_port",
		ram_block9a_2.port_a_address_width = 9,
		ram_block9a_2.port_a_data_width = 1,
		ram_block9a_2.port_a_first_address = 0,
		ram_block9a_2.port_a_first_bit_number = 2,
		ram_block9a_2.port_a_last_address = 511,
		ram_block9a_2.port_a_logical_ram_depth = 512,
		ram_block9a_2.port_a_logical_ram_width = 48,
		ram_block9a_2.port_b_address_clear = "clear1",
		ram_block9a_2.port_b_address_clock = "clock1",
		ram_block9a_2.port_b_address_width = 8,
		ram_block9a_2.port_b_data_out_clear = "clear1",
		ram_block9a_2.port_b_data_out_clock = "clock1",
		ram_block9a_2.port_b_data_width = 2,
		ram_block9a_2.port_b_first_address = 0,
		ram_block9a_2.port_b_first_bit_number = 2,
		ram_block9a_2.port_b_last_address = 255,
		ram_block9a_2.port_b_logical_ram_depth = 256,
		ram_block9a_2.port_b_logical_ram_width = 96,
		ram_block9a_2.port_b_read_enable_clock = "clock1",
		ram_block9a_2.ram_block_type = "AUTO",
		ram_block9a_2.lpm_type = "cyclonev_ram_block";
	cyclonev_ram_block   ram_block9a_3
	( 
	.clk0(clock0),
	.clk1(clock1),
	.clr1(aclr1),
	.dftout(),
	.eccstatus(),
	.ena0(wren_a),
	.ena1(clocken1),
	.portaaddr({address_a_wire[8:0]}),
	.portadatain({data_a[3]}),
	.portadataout(),
	.portawe(wren_a),
	.portbaddr({address_b_wire[7:0]}),
	.portbaddrstall(addressstall_b),
	.portbdataout(wire_ram_block9a_3portbdataout[1:0]),
	.portbre(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portare(1'b1),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({2{1'b0}}),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1),
	.nerror(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block9a_3.clk0_core_clock_enable = "ena0",
		ram_block9a_3.clk0_input_clock_enable = "none",
		ram_block9a_3.clk1_core_clock_enable = "none",
		ram_block9a_3.clk1_input_clock_enable = "none",
		ram_block9a_3.clk1_output_clock_enable = "ena1",
		ram_block9a_3.connectivity_checking = "OFF",
		ram_block9a_3.data_interleave_offset_in_bits = 48,
		ram_block9a_3.data_interleave_width_in_bits = 1,
		ram_block9a_3.logical_ram_name = "ALTSYNCRAM",
		ram_block9a_3.mixed_port_feed_through_mode = "dont_care",
		ram_block9a_3.operation_mode = "dual_port",
		ram_block9a_3.port_a_address_width = 9,
		ram_block9a_3.port_a_data_width = 1,
		ram_block9a_3.port_a_first_address = 0,
		ram_block9a_3.port_a_first_bit_number = 3,
		ram_block9a_3.port_a_last_address = 511,
		ram_block9a_3.port_a_logical_ram_depth = 512,
		ram_block9a_3.port_a_logical_ram_width = 48,
		ram_block9a_3.port_b_address_clear = "clear1",
		ram_block9a_3.port_b_address_clock = "clock1",
		ram_block9a_3.port_b_address_width = 8,
		ram_block9a_3.port_b_data_out_clear = "clear1",
		ram_block9a_3.port_b_data_out_clock = "clock1",
		ram_block9a_3.port_b_data_width = 2,
		ram_block9a_3.port_b_first_address = 0,
		ram_block9a_3.port_b_first_bit_number = 3,
		ram_block9a_3.port_b_last_address = 255,
		ram_block9a_3.port_b_logical_ram_depth = 256,
		ram_block9a_3.port_b_logical_ram_width = 96,
		ram_block9a_3.port_b_read_enable_clock = "clock1",
		ram_block9a_3.ram_block_type = "AUTO",
		ram_block9a_3.lpm_type = "cyclonev_ram_block";
	cyclonev_ram_block   ram_block9a_4
	( 
	.clk0(clock0),
	.clk1(clock1),
	.clr1(aclr1),
	.dftout(),
	.eccstatus(),
	.ena0(wren_a),
	.ena1(clocken1),
	.portaaddr({address_a_wire[8:0]}),
	.portadatain({data_a[4]}),
	.portadataout(),
	.portawe(wren_a),
	.portbaddr({address_b_wire[7:0]}),
	.portbaddrstall(addressstall_b),
	.portbdataout(wire_ram_block9a_4portbdataout[1:0]),
	.portbre(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portare(1'b1),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({2{1'b0}}),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1),
	.nerror(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block9a_4.clk0_core_clock_enable = "ena0",
		ram_block9a_4.clk0_input_clock_enable = "none",
		ram_block9a_4.clk1_core_clock_enable = "none",
		ram_block9a_4.clk1_input_clock_enable = "none",
		ram_block9a_4.clk1_output_clock_enable = "ena1",
		ram_block9a_4.connectivity_checking = "OFF",
		ram_block9a_4.data_interleave_offset_in_bits = 48,
		ram_block9a_4.data_interleave_width_in_bits = 1,
		ram_block9a_4.logical_ram_name = "ALTSYNCRAM",
		ram_block9a_4.mixed_port_feed_through_mode = "dont_care",
		ram_block9a_4.operation_mode = "dual_port",
		ram_block9a_4.port_a_address_width = 9,
		ram_block9a_4.port_a_data_width = 1,
		ram_block9a_4.port_a_first_address = 0,
		ram_block9a_4.port_a_first_bit_number = 4,
		ram_block9a_4.port_a_last_address = 511,
		ram_block9a_4.port_a_logical_ram_depth = 512,
		ram_block9a_4.port_a_logical_ram_width = 48,
		ram_block9a_4.port_b_address_clear = "clear1",
		ram_block9a_4.port_b_address_clock = "clock1",
		ram_block9a_4.port_b_address_width = 8,
		ram_block9a_4.port_b_data_out_clear = "clear1",
		ram_block9a_4.port_b_data_out_clock = "clock1",
		ram_block9a_4.port_b_data_width = 2,
		ram_block9a_4.port_b_first_address = 0,
		ram_block9a_4.port_b_first_bit_number = 4,
		ram_block9a_4.port_b_last_address = 255,
		ram_block9a_4.port_b_logical_ram_depth = 256,
		ram_block9a_4.port_b_logical_ram_width = 96,
		ram_block9a_4.port_b_read_enable_clock = "clock1",
		ram_block9a_4.ram_block_type = "AUTO",
		ram_block9a_4.lpm_type = "cyclonev_ram_block";
	cyclonev_ram_block   ram_block9a_5
	( 
	.clk0(clock0),
	.clk1(clock1),
	.clr1(aclr1),
	.dftout(),
	.eccstatus(),
	.ena0(wren_a),
	.ena1(clocken1),
	.portaaddr({address_a_wire[8:0]}),
	.portadatain({data_a[5]}),
	.portadataout(),
	.portawe(wren_a),
	.portbaddr({address_b_wire[7:0]}),
	.portbaddrstall(addressstall_b),
	.portbdataout(wire_ram_block9a_5portbdataout[1:0]),
	.portbre(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portare(1'b1),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({2{1'b0}}),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1),
	.nerror(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block9a_5.clk0_core_clock_enable = "ena0",
		ram_block9a_5.clk0_input_clock_enable = "none",
		ram_block9a_5.clk1_core_clock_enable = "none",
		ram_block9a_5.clk1_input_clock_enable = "none",
		ram_block9a_5.clk1_output_clock_enable = "ena1",
		ram_block9a_5.connectivity_checking = "OFF",
		ram_block9a_5.data_interleave_offset_in_bits = 48,
		ram_block9a_5.data_interleave_width_in_bits = 1,
		ram_block9a_5.logical_ram_name = "ALTSYNCRAM",
		ram_block9a_5.mixed_port_feed_through_mode = "dont_care",
		ram_block9a_5.operation_mode = "dual_port",
		ram_block9a_5.port_a_address_width = 9,
		ram_block9a_5.port_a_data_width = 1,
		ram_block9a_5.port_a_first_address = 0,
		ram_block9a_5.port_a_first_bit_number = 5,
		ram_block9a_5.port_a_last_address = 511,
		ram_block9a_5.port_a_logical_ram_depth = 512,
		ram_block9a_5.port_a_logical_ram_width = 48,
		ram_block9a_5.port_b_address_clear = "clear1",
		ram_block9a_5.port_b_address_clock = "clock1",
		ram_block9a_5.port_b_address_width = 8,
		ram_block9a_5.port_b_data_out_clear = "clear1",
		ram_block9a_5.port_b_data_out_clock = "clock1",
		ram_block9a_5.port_b_data_width = 2,
		ram_block9a_5.port_b_first_address = 0,
		ram_block9a_5.port_b_first_bit_number = 5,
		ram_block9a_5.port_b_last_address = 255,
		ram_block9a_5.port_b_logical_ram_depth = 256,
		ram_block9a_5.port_b_logical_ram_width = 96,
		ram_block9a_5.port_b_read_enable_clock = "clock1",
		ram_block9a_5.ram_block_type = "AUTO",
		ram_block9a_5.lpm_type = "cyclonev_ram_block";
	cyclonev_ram_block   ram_block9a_6
	( 
	.clk0(clock0),
	.clk1(clock1),
	.clr1(aclr1),
	.dftout(),
	.eccstatus(),
	.ena0(wren_a),
	.ena1(clocken1),
	.portaaddr({address_a_wire[8:0]}),
	.portadatain({data_a[6]}),
	.portadataout(),
	.portawe(wren_a),
	.portbaddr({address_b_wire[7:0]}),
	.portbaddrstall(addressstall_b),
	.portbdataout(wire_ram_block9a_6portbdataout[1:0]),
	.portbre(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portare(1'b1),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({2{1'b0}}),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1),
	.nerror(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block9a_6.clk0_core_clock_enable = "ena0",
		ram_block9a_6.clk0_input_clock_enable = "none",
		ram_block9a_6.clk1_core_clock_enable = "none",
		ram_block9a_6.clk1_input_clock_enable = "none",
		ram_block9a_6.clk1_output_clock_enable = "ena1",
		ram_block9a_6.connectivity_checking = "OFF",
		ram_block9a_6.data_interleave_offset_in_bits = 48,
		ram_block9a_6.data_interleave_width_in_bits = 1,
		ram_block9a_6.logical_ram_name = "ALTSYNCRAM",
		ram_block9a_6.mixed_port_feed_through_mode = "dont_care",
		ram_block9a_6.operation_mode = "dual_port",
		ram_block9a_6.port_a_address_width = 9,
		ram_block9a_6.port_a_data_width = 1,
		ram_block9a_6.port_a_first_address = 0,
		ram_block9a_6.port_a_first_bit_number = 6,
		ram_block9a_6.port_a_last_address = 511,
		ram_block9a_6.port_a_logical_ram_depth = 512,
		ram_block9a_6.port_a_logical_ram_width = 48,
		ram_block9a_6.port_b_address_clear = "clear1",
		ram_block9a_6.port_b_address_clock = "clock1",
		ram_block9a_6.port_b_address_width = 8,
		ram_block9a_6.port_b_data_out_clear = "clear1",
		ram_block9a_6.port_b_data_out_clock = "clock1",
		ram_block9a_6.port_b_data_width = 2,
		ram_block9a_6.port_b_first_address = 0,
		ram_block9a_6.port_b_first_bit_number = 6,
		ram_block9a_6.port_b_last_address = 255,
		ram_block9a_6.port_b_logical_ram_depth = 256,
		ram_block9a_6.port_b_logical_ram_width = 96,
		ram_block9a_6.port_b_read_enable_clock = "clock1",
		ram_block9a_6.ram_block_type = "AUTO",
		ram_block9a_6.lpm_type = "cyclonev_ram_block";
	cyclonev_ram_block   ram_block9a_7
	( 
	.clk0(clock0),
	.clk1(clock1),
	.clr1(aclr1),
	.dftout(),
	.eccstatus(),
	.ena0(wren_a),
	.ena1(clocken1),
	.portaaddr({address_a_wire[8:0]}),
	.portadatain({data_a[7]}),
	.portadataout(),
	.portawe(wren_a),
	.portbaddr({address_b_wire[7:0]}),
	.portbaddrstall(addressstall_b),
	.portbdataout(wire_ram_block9a_7portbdataout[1:0]),
	.portbre(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portare(1'b1),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({2{1'b0}}),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1),
	.nerror(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block9a_7.clk0_core_clock_enable = "ena0",
		ram_block9a_7.clk0_input_clock_enable = "none",
		ram_block9a_7.clk1_core_clock_enable = "none",
		ram_block9a_7.clk1_input_clock_enable = "none",
		ram_block9a_7.clk1_output_clock_enable = "ena1",
		ram_block9a_7.connectivity_checking = "OFF",
		ram_block9a_7.data_interleave_offset_in_bits = 48,
		ram_block9a_7.data_interleave_width_in_bits = 1,
		ram_block9a_7.logical_ram_name = "ALTSYNCRAM",
		ram_block9a_7.mixed_port_feed_through_mode = "dont_care",
		ram_block9a_7.operation_mode = "dual_port",
		ram_block9a_7.port_a_address_width = 9,
		ram_block9a_7.port_a_data_width = 1,
		ram_block9a_7.port_a_first_address = 0,
		ram_block9a_7.port_a_first_bit_number = 7,
		ram_block9a_7.port_a_last_address = 511,
		ram_block9a_7.port_a_logical_ram_depth = 512,
		ram_block9a_7.port_a_logical_ram_width = 48,
		ram_block9a_7.port_b_address_clear = "clear1",
		ram_block9a_7.port_b_address_clock = "clock1",
		ram_block9a_7.port_b_address_width = 8,
		ram_block9a_7.port_b_data_out_clear = "clear1",
		ram_block9a_7.port_b_data_out_clock = "clock1",
		ram_block9a_7.port_b_data_width = 2,
		ram_block9a_7.port_b_first_address = 0,
		ram_block9a_7.port_b_first_bit_number = 7,
		ram_block9a_7.port_b_last_address = 255,
		ram_block9a_7.port_b_logical_ram_depth = 256,
		ram_block9a_7.port_b_logical_ram_width = 96,
		ram_block9a_7.port_b_read_enable_clock = "clock1",
		ram_block9a_7.ram_block_type = "AUTO",
		ram_block9a_7.lpm_type = "cyclonev_ram_block";
	cyclonev_ram_block   ram_block9a_8
	( 
	.clk0(clock0),
	.clk1(clock1),
	.clr1(aclr1),
	.dftout(),
	.eccstatus(),
	.ena0(wren_a),
	.ena1(clocken1),
	.portaaddr({address_a_wire[8:0]}),
	.portadatain({data_a[8]}),
	.portadataout(),
	.portawe(wren_a),
	.portbaddr({address_b_wire[7:0]}),
	.portbaddrstall(addressstall_b),
	.portbdataout(wire_ram_block9a_8portbdataout[1:0]),
	.portbre(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portare(1'b1),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({2{1'b0}}),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1),
	.nerror(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block9a_8.clk0_core_clock_enable = "ena0",
		ram_block9a_8.clk0_input_clock_enable = "none",
		ram_block9a_8.clk1_core_clock_enable = "none",
		ram_block9a_8.clk1_input_clock_enable = "none",
		ram_block9a_8.clk1_output_clock_enable = "ena1",
		ram_block9a_8.connectivity_checking = "OFF",
		ram_block9a_8.data_interleave_offset_in_bits = 48,
		ram_block9a_8.data_interleave_width_in_bits = 1,
		ram_block9a_8.logical_ram_name = "ALTSYNCRAM",
		ram_block9a_8.mixed_port_feed_through_mode = "dont_care",
		ram_block9a_8.operation_mode = "dual_port",
		ram_block9a_8.port_a_address_width = 9,
		ram_block9a_8.port_a_data_width = 1,
		ram_block9a_8.port_a_first_address = 0,
		ram_block9a_8.port_a_first_bit_number = 8,
		ram_block9a_8.port_a_last_address = 511,
		ram_block9a_8.port_a_logical_ram_depth = 512,
		ram_block9a_8.port_a_logical_ram_width = 48,
		ram_block9a_8.port_b_address_clear = "clear1",
		ram_block9a_8.port_b_address_clock = "clock1",
		ram_block9a_8.port_b_address_width = 8,
		ram_block9a_8.port_b_data_out_clear = "clear1",
		ram_block9a_8.port_b_data_out_clock = "clock1",
		ram_block9a_8.port_b_data_width = 2,
		ram_block9a_8.port_b_first_address = 0,
		ram_block9a_8.port_b_first_bit_number = 8,
		ram_block9a_8.port_b_last_address = 255,
		ram_block9a_8.port_b_logical_ram_depth = 256,
		ram_block9a_8.port_b_logical_ram_width = 96,
		ram_block9a_8.port_b_read_enable_clock = "clock1",
		ram_block9a_8.ram_block_type = "AUTO",
		ram_block9a_8.lpm_type = "cyclonev_ram_block";
	cyclonev_ram_block   ram_block9a_9
	( 
	.clk0(clock0),
	.clk1(clock1),
	.clr1(aclr1),
	.dftout(),
	.eccstatus(),
	.ena0(wren_a),
	.ena1(clocken1),
	.portaaddr({address_a_wire[8:0]}),
	.portadatain({data_a[9]}),
	.portadataout(),
	.portawe(wren_a),
	.portbaddr({address_b_wire[7:0]}),
	.portbaddrstall(addressstall_b),
	.portbdataout(wire_ram_block9a_9portbdataout[1:0]),
	.portbre(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portare(1'b1),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({2{1'b0}}),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1),
	.nerror(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block9a_9.clk0_core_clock_enable = "ena0",
		ram_block9a_9.clk0_input_clock_enable = "none",
		ram_block9a_9.clk1_core_clock_enable = "none",
		ram_block9a_9.clk1_input_clock_enable = "none",
		ram_block9a_9.clk1_output_clock_enable = "ena1",
		ram_block9a_9.connectivity_checking = "OFF",
		ram_block9a_9.data_interleave_offset_in_bits = 48,
		ram_block9a_9.data_interleave_width_in_bits = 1,
		ram_block9a_9.logical_ram_name = "ALTSYNCRAM",
		ram_block9a_9.mixed_port_feed_through_mode = "dont_care",
		ram_block9a_9.operation_mode = "dual_port",
		ram_block9a_9.port_a_address_width = 9,
		ram_block9a_9.port_a_data_width = 1,
		ram_block9a_9.port_a_first_address = 0,
		ram_block9a_9.port_a_first_bit_number = 9,
		ram_block9a_9.port_a_last_address = 511,
		ram_block9a_9.port_a_logical_ram_depth = 512,
		ram_block9a_9.port_a_logical_ram_width = 48,
		ram_block9a_9.port_b_address_clear = "clear1",
		ram_block9a_9.port_b_address_clock = "clock1",
		ram_block9a_9.port_b_address_width = 8,
		ram_block9a_9.port_b_data_out_clear = "clear1",
		ram_block9a_9.port_b_data_out_clock = "clock1",
		ram_block9a_9.port_b_data_width = 2,
		ram_block9a_9.port_b_first_address = 0,
		ram_block9a_9.port_b_first_bit_number = 9,
		ram_block9a_9.port_b_last_address = 255,
		ram_block9a_9.port_b_logical_ram_depth = 256,
		ram_block9a_9.port_b_logical_ram_width = 96,
		ram_block9a_9.port_b_read_enable_clock = "clock1",
		ram_block9a_9.ram_block_type = "AUTO",
		ram_block9a_9.lpm_type = "cyclonev_ram_block";
	cyclonev_ram_block   ram_block9a_10
	( 
	.clk0(clock0),
	.clk1(clock1),
	.clr1(aclr1),
	.dftout(),
	.eccstatus(),
	.ena0(wren_a),
	.ena1(clocken1),
	.portaaddr({address_a_wire[8:0]}),
	.portadatain({data_a[10]}),
	.portadataout(),
	.portawe(wren_a),
	.portbaddr({address_b_wire[7:0]}),
	.portbaddrstall(addressstall_b),
	.portbdataout(wire_ram_block9a_10portbdataout[1:0]),
	.portbre(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portare(1'b1),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({2{1'b0}}),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1),
	.nerror(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block9a_10.clk0_core_clock_enable = "ena0",
		ram_block9a_10.clk0_input_clock_enable = "none",
		ram_block9a_10.clk1_core_clock_enable = "none",
		ram_block9a_10.clk1_input_clock_enable = "none",
		ram_block9a_10.clk1_output_clock_enable = "ena1",
		ram_block9a_10.connectivity_checking = "OFF",
		ram_block9a_10.data_interleave_offset_in_bits = 48,
		ram_block9a_10.data_interleave_width_in_bits = 1,
		ram_block9a_10.logical_ram_name = "ALTSYNCRAM",
		ram_block9a_10.mixed_port_feed_through_mode = "dont_care",
		ram_block9a_10.operation_mode = "dual_port",
		ram_block9a_10.port_a_address_width = 9,
		ram_block9a_10.port_a_data_width = 1,
		ram_block9a_10.port_a_first_address = 0,
		ram_block9a_10.port_a_first_bit_number = 10,
		ram_block9a_10.port_a_last_address = 511,
		ram_block9a_10.port_a_logical_ram_depth = 512,
		ram_block9a_10.port_a_logical_ram_width = 48,
		ram_block9a_10.port_b_address_clear = "clear1",
		ram_block9a_10.port_b_address_clock = "clock1",
		ram_block9a_10.port_b_address_width = 8,
		ram_block9a_10.port_b_data_out_clear = "clear1",
		ram_block9a_10.port_b_data_out_clock = "clock1",
		ram_block9a_10.port_b_data_width = 2,
		ram_block9a_10.port_b_first_address = 0,
		ram_block9a_10.port_b_first_bit_number = 10,
		ram_block9a_10.port_b_last_address = 255,
		ram_block9a_10.port_b_logical_ram_depth = 256,
		ram_block9a_10.port_b_logical_ram_width = 96,
		ram_block9a_10.port_b_read_enable_clock = "clock1",
		ram_block9a_10.ram_block_type = "AUTO",
		ram_block9a_10.lpm_type = "cyclonev_ram_block";
	cyclonev_ram_block   ram_block9a_11
	( 
	.clk0(clock0),
	.clk1(clock1),
	.clr1(aclr1),
	.dftout(),
	.eccstatus(),
	.ena0(wren_a),
	.ena1(clocken1),
	.portaaddr({address_a_wire[8:0]}),
	.portadatain({data_a[11]}),
	.portadataout(),
	.portawe(wren_a),
	.portbaddr({address_b_wire[7:0]}),
	.portbaddrstall(addressstall_b),
	.portbdataout(wire_ram_block9a_11portbdataout[1:0]),
	.portbre(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portare(1'b1),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({2{1'b0}}),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1),
	.nerror(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block9a_11.clk0_core_clock_enable = "ena0",
		ram_block9a_11.clk0_input_clock_enable = "none",
		ram_block9a_11.clk1_core_clock_enable = "none",
		ram_block9a_11.clk1_input_clock_enable = "none",
		ram_block9a_11.clk1_output_clock_enable = "ena1",
		ram_block9a_11.connectivity_checking = "OFF",
		ram_block9a_11.data_interleave_offset_in_bits = 48,
		ram_block9a_11.data_interleave_width_in_bits = 1,
		ram_block9a_11.logical_ram_name = "ALTSYNCRAM",
		ram_block9a_11.mixed_port_feed_through_mode = "dont_care",
		ram_block9a_11.operation_mode = "dual_port",
		ram_block9a_11.port_a_address_width = 9,
		ram_block9a_11.port_a_data_width = 1,
		ram_block9a_11.port_a_first_address = 0,
		ram_block9a_11.port_a_first_bit_number = 11,
		ram_block9a_11.port_a_last_address = 511,
		ram_block9a_11.port_a_logical_ram_depth = 512,
		ram_block9a_11.port_a_logical_ram_width = 48,
		ram_block9a_11.port_b_address_clear = "clear1",
		ram_block9a_11.port_b_address_clock = "clock1",
		ram_block9a_11.port_b_address_width = 8,
		ram_block9a_11.port_b_data_out_clear = "clear1",
		ram_block9a_11.port_b_data_out_clock = "clock1",
		ram_block9a_11.port_b_data_width = 2,
		ram_block9a_11.port_b_first_address = 0,
		ram_block9a_11.port_b_first_bit_number = 11,
		ram_block9a_11.port_b_last_address = 255,
		ram_block9a_11.port_b_logical_ram_depth = 256,
		ram_block9a_11.port_b_logical_ram_width = 96,
		ram_block9a_11.port_b_read_enable_clock = "clock1",
		ram_block9a_11.ram_block_type = "AUTO",
		ram_block9a_11.lpm_type = "cyclonev_ram_block";
	cyclonev_ram_block   ram_block9a_12
	( 
	.clk0(clock0),
	.clk1(clock1),
	.clr1(aclr1),
	.dftout(),
	.eccstatus(),
	.ena0(wren_a),
	.ena1(clocken1),
	.portaaddr({address_a_wire[8:0]}),
	.portadatain({data_a[12]}),
	.portadataout(),
	.portawe(wren_a),
	.portbaddr({address_b_wire[7:0]}),
	.portbaddrstall(addressstall_b),
	.portbdataout(wire_ram_block9a_12portbdataout[1:0]),
	.portbre(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portare(1'b1),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({2{1'b0}}),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1),
	.nerror(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block9a_12.clk0_core_clock_enable = "ena0",
		ram_block9a_12.clk0_input_clock_enable = "none",
		ram_block9a_12.clk1_core_clock_enable = "none",
		ram_block9a_12.clk1_input_clock_enable = "none",
		ram_block9a_12.clk1_output_clock_enable = "ena1",
		ram_block9a_12.connectivity_checking = "OFF",
		ram_block9a_12.data_interleave_offset_in_bits = 48,
		ram_block9a_12.data_interleave_width_in_bits = 1,
		ram_block9a_12.logical_ram_name = "ALTSYNCRAM",
		ram_block9a_12.mixed_port_feed_through_mode = "dont_care",
		ram_block9a_12.operation_mode = "dual_port",
		ram_block9a_12.port_a_address_width = 9,
		ram_block9a_12.port_a_data_width = 1,
		ram_block9a_12.port_a_first_address = 0,
		ram_block9a_12.port_a_first_bit_number = 12,
		ram_block9a_12.port_a_last_address = 511,
		ram_block9a_12.port_a_logical_ram_depth = 512,
		ram_block9a_12.port_a_logical_ram_width = 48,
		ram_block9a_12.port_b_address_clear = "clear1",
		ram_block9a_12.port_b_address_clock = "clock1",
		ram_block9a_12.port_b_address_width = 8,
		ram_block9a_12.port_b_data_out_clear = "clear1",
		ram_block9a_12.port_b_data_out_clock = "clock1",
		ram_block9a_12.port_b_data_width = 2,
		ram_block9a_12.port_b_first_address = 0,
		ram_block9a_12.port_b_first_bit_number = 12,
		ram_block9a_12.port_b_last_address = 255,
		ram_block9a_12.port_b_logical_ram_depth = 256,
		ram_block9a_12.port_b_logical_ram_width = 96,
		ram_block9a_12.port_b_read_enable_clock = "clock1",
		ram_block9a_12.ram_block_type = "AUTO",
		ram_block9a_12.lpm_type = "cyclonev_ram_block";
	cyclonev_ram_block   ram_block9a_13
	( 
	.clk0(clock0),
	.clk1(clock1),
	.clr1(aclr1),
	.dftout(),
	.eccstatus(),
	.ena0(wren_a),
	.ena1(clocken1),
	.portaaddr({address_a_wire[8:0]}),
	.portadatain({data_a[13]}),
	.portadataout(),
	.portawe(wren_a),
	.portbaddr({address_b_wire[7:0]}),
	.portbaddrstall(addressstall_b),
	.portbdataout(wire_ram_block9a_13portbdataout[1:0]),
	.portbre(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portare(1'b1),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({2{1'b0}}),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1),
	.nerror(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block9a_13.clk0_core_clock_enable = "ena0",
		ram_block9a_13.clk0_input_clock_enable = "none",
		ram_block9a_13.clk1_core_clock_enable = "none",
		ram_block9a_13.clk1_input_clock_enable = "none",
		ram_block9a_13.clk1_output_clock_enable = "ena1",
		ram_block9a_13.connectivity_checking = "OFF",
		ram_block9a_13.data_interleave_offset_in_bits = 48,
		ram_block9a_13.data_interleave_width_in_bits = 1,
		ram_block9a_13.logical_ram_name = "ALTSYNCRAM",
		ram_block9a_13.mixed_port_feed_through_mode = "dont_care",
		ram_block9a_13.operation_mode = "dual_port",
		ram_block9a_13.port_a_address_width = 9,
		ram_block9a_13.port_a_data_width = 1,
		ram_block9a_13.port_a_first_address = 0,
		ram_block9a_13.port_a_first_bit_number = 13,
		ram_block9a_13.port_a_last_address = 511,
		ram_block9a_13.port_a_logical_ram_depth = 512,
		ram_block9a_13.port_a_logical_ram_width = 48,
		ram_block9a_13.port_b_address_clear = "clear1",
		ram_block9a_13.port_b_address_clock = "clock1",
		ram_block9a_13.port_b_address_width = 8,
		ram_block9a_13.port_b_data_out_clear = "clear1",
		ram_block9a_13.port_b_data_out_clock = "clock1",
		ram_block9a_13.port_b_data_width = 2,
		ram_block9a_13.port_b_first_address = 0,
		ram_block9a_13.port_b_first_bit_number = 13,
		ram_block9a_13.port_b_last_address = 255,
		ram_block9a_13.port_b_logical_ram_depth = 256,
		ram_block9a_13.port_b_logical_ram_width = 96,
		ram_block9a_13.port_b_read_enable_clock = "clock1",
		ram_block9a_13.ram_block_type = "AUTO",
		ram_block9a_13.lpm_type = "cyclonev_ram_block";
	cyclonev_ram_block   ram_block9a_14
	( 
	.clk0(clock0),
	.clk1(clock1),
	.clr1(aclr1),
	.dftout(),
	.eccstatus(),
	.ena0(wren_a),
	.ena1(clocken1),
	.portaaddr({address_a_wire[8:0]}),
	.portadatain({data_a[14]}),
	.portadataout(),
	.portawe(wren_a),
	.portbaddr({address_b_wire[7:0]}),
	.portbaddrstall(addressstall_b),
	.portbdataout(wire_ram_block9a_14portbdataout[1:0]),
	.portbre(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portare(1'b1),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({2{1'b0}}),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1),
	.nerror(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block9a_14.clk0_core_clock_enable = "ena0",
		ram_block9a_14.clk0_input_clock_enable = "none",
		ram_block9a_14.clk1_core_clock_enable = "none",
		ram_block9a_14.clk1_input_clock_enable = "none",
		ram_block9a_14.clk1_output_clock_enable = "ena1",
		ram_block9a_14.connectivity_checking = "OFF",
		ram_block9a_14.data_interleave_offset_in_bits = 48,
		ram_block9a_14.data_interleave_width_in_bits = 1,
		ram_block9a_14.logical_ram_name = "ALTSYNCRAM",
		ram_block9a_14.mixed_port_feed_through_mode = "dont_care",
		ram_block9a_14.operation_mode = "dual_port",
		ram_block9a_14.port_a_address_width = 9,
		ram_block9a_14.port_a_data_width = 1,
		ram_block9a_14.port_a_first_address = 0,
		ram_block9a_14.port_a_first_bit_number = 14,
		ram_block9a_14.port_a_last_address = 511,
		ram_block9a_14.port_a_logical_ram_depth = 512,
		ram_block9a_14.port_a_logical_ram_width = 48,
		ram_block9a_14.port_b_address_clear = "clear1",
		ram_block9a_14.port_b_address_clock = "clock1",
		ram_block9a_14.port_b_address_width = 8,
		ram_block9a_14.port_b_data_out_clear = "clear1",
		ram_block9a_14.port_b_data_out_clock = "clock1",
		ram_block9a_14.port_b_data_width = 2,
		ram_block9a_14.port_b_first_address = 0,
		ram_block9a_14.port_b_first_bit_number = 14,
		ram_block9a_14.port_b_last_address = 255,
		ram_block9a_14.port_b_logical_ram_depth = 256,
		ram_block9a_14.port_b_logical_ram_width = 96,
		ram_block9a_14.port_b_read_enable_clock = "clock1",
		ram_block9a_14.ram_block_type = "AUTO",
		ram_block9a_14.lpm_type = "cyclonev_ram_block";
	cyclonev_ram_block   ram_block9a_15
	( 
	.clk0(clock0),
	.clk1(clock1),
	.clr1(aclr1),
	.dftout(),
	.eccstatus(),
	.ena0(wren_a),
	.ena1(clocken1),
	.portaaddr({address_a_wire[8:0]}),
	.portadatain({data_a[15]}),
	.portadataout(),
	.portawe(wren_a),
	.portbaddr({address_b_wire[7:0]}),
	.portbaddrstall(addressstall_b),
	.portbdataout(wire_ram_block9a_15portbdataout[1:0]),
	.portbre(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portare(1'b1),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({2{1'b0}}),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1),
	.nerror(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block9a_15.clk0_core_clock_enable = "ena0",
		ram_block9a_15.clk0_input_clock_enable = "none",
		ram_block9a_15.clk1_core_clock_enable = "none",
		ram_block9a_15.clk1_input_clock_enable = "none",
		ram_block9a_15.clk1_output_clock_enable = "ena1",
		ram_block9a_15.connectivity_checking = "OFF",
		ram_block9a_15.data_interleave_offset_in_bits = 48,
		ram_block9a_15.data_interleave_width_in_bits = 1,
		ram_block9a_15.logical_ram_name = "ALTSYNCRAM",
		ram_block9a_15.mixed_port_feed_through_mode = "dont_care",
		ram_block9a_15.operation_mode = "dual_port",
		ram_block9a_15.port_a_address_width = 9,
		ram_block9a_15.port_a_data_width = 1,
		ram_block9a_15.port_a_first_address = 0,
		ram_block9a_15.port_a_first_bit_number = 15,
		ram_block9a_15.port_a_last_address = 511,
		ram_block9a_15.port_a_logical_ram_depth = 512,
		ram_block9a_15.port_a_logical_ram_width = 48,
		ram_block9a_15.port_b_address_clear = "clear1",
		ram_block9a_15.port_b_address_clock = "clock1",
		ram_block9a_15.port_b_address_width = 8,
		ram_block9a_15.port_b_data_out_clear = "clear1",
		ram_block9a_15.port_b_data_out_clock = "clock1",
		ram_block9a_15.port_b_data_width = 2,
		ram_block9a_15.port_b_first_address = 0,
		ram_block9a_15.port_b_first_bit_number = 15,
		ram_block9a_15.port_b_last_address = 255,
		ram_block9a_15.port_b_logical_ram_depth = 256,
		ram_block9a_15.port_b_logical_ram_width = 96,
		ram_block9a_15.port_b_read_enable_clock = "clock1",
		ram_block9a_15.ram_block_type = "AUTO",
		ram_block9a_15.lpm_type = "cyclonev_ram_block";
	cyclonev_ram_block   ram_block9a_16
	( 
	.clk0(clock0),
	.clk1(clock1),
	.clr1(aclr1),
	.dftout(),
	.eccstatus(),
	.ena0(wren_a),
	.ena1(clocken1),
	.portaaddr({address_a_wire[8:0]}),
	.portadatain({data_a[16]}),
	.portadataout(),
	.portawe(wren_a),
	.portbaddr({address_b_wire[7:0]}),
	.portbaddrstall(addressstall_b),
	.portbdataout(wire_ram_block9a_16portbdataout[1:0]),
	.portbre(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portare(1'b1),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({2{1'b0}}),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1),
	.nerror(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block9a_16.clk0_core_clock_enable = "ena0",
		ram_block9a_16.clk0_input_clock_enable = "none",
		ram_block9a_16.clk1_core_clock_enable = "none",
		ram_block9a_16.clk1_input_clock_enable = "none",
		ram_block9a_16.clk1_output_clock_enable = "ena1",
		ram_block9a_16.connectivity_checking = "OFF",
		ram_block9a_16.data_interleave_offset_in_bits = 48,
		ram_block9a_16.data_interleave_width_in_bits = 1,
		ram_block9a_16.logical_ram_name = "ALTSYNCRAM",
		ram_block9a_16.mixed_port_feed_through_mode = "dont_care",
		ram_block9a_16.operation_mode = "dual_port",
		ram_block9a_16.port_a_address_width = 9,
		ram_block9a_16.port_a_data_width = 1,
		ram_block9a_16.port_a_first_address = 0,
		ram_block9a_16.port_a_first_bit_number = 16,
		ram_block9a_16.port_a_last_address = 511,
		ram_block9a_16.port_a_logical_ram_depth = 512,
		ram_block9a_16.port_a_logical_ram_width = 48,
		ram_block9a_16.port_b_address_clear = "clear1",
		ram_block9a_16.port_b_address_clock = "clock1",
		ram_block9a_16.port_b_address_width = 8,
		ram_block9a_16.port_b_data_out_clear = "clear1",
		ram_block9a_16.port_b_data_out_clock = "clock1",
		ram_block9a_16.port_b_data_width = 2,
		ram_block9a_16.port_b_first_address = 0,
		ram_block9a_16.port_b_first_bit_number = 16,
		ram_block9a_16.port_b_last_address = 255,
		ram_block9a_16.port_b_logical_ram_depth = 256,
		ram_block9a_16.port_b_logical_ram_width = 96,
		ram_block9a_16.port_b_read_enable_clock = "clock1",
		ram_block9a_16.ram_block_type = "AUTO",
		ram_block9a_16.lpm_type = "cyclonev_ram_block";
	cyclonev_ram_block   ram_block9a_17
	( 
	.clk0(clock0),
	.clk1(clock1),
	.clr1(aclr1),
	.dftout(),
	.eccstatus(),
	.ena0(wren_a),
	.ena1(clocken1),
	.portaaddr({address_a_wire[8:0]}),
	.portadatain({data_a[17]}),
	.portadataout(),
	.portawe(wren_a),
	.portbaddr({address_b_wire[7:0]}),
	.portbaddrstall(addressstall_b),
	.portbdataout(wire_ram_block9a_17portbdataout[1:0]),
	.portbre(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portare(1'b1),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({2{1'b0}}),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1),
	.nerror(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block9a_17.clk0_core_clock_enable = "ena0",
		ram_block9a_17.clk0_input_clock_enable = "none",
		ram_block9a_17.clk1_core_clock_enable = "none",
		ram_block9a_17.clk1_input_clock_enable = "none",
		ram_block9a_17.clk1_output_clock_enable = "ena1",
		ram_block9a_17.connectivity_checking = "OFF",
		ram_block9a_17.data_interleave_offset_in_bits = 48,
		ram_block9a_17.data_interleave_width_in_bits = 1,
		ram_block9a_17.logical_ram_name = "ALTSYNCRAM",
		ram_block9a_17.mixed_port_feed_through_mode = "dont_care",
		ram_block9a_17.operation_mode = "dual_port",
		ram_block9a_17.port_a_address_width = 9,
		ram_block9a_17.port_a_data_width = 1,
		ram_block9a_17.port_a_first_address = 0,
		ram_block9a_17.port_a_first_bit_number = 17,
		ram_block9a_17.port_a_last_address = 511,
		ram_block9a_17.port_a_logical_ram_depth = 512,
		ram_block9a_17.port_a_logical_ram_width = 48,
		ram_block9a_17.port_b_address_clear = "clear1",
		ram_block9a_17.port_b_address_clock = "clock1",
		ram_block9a_17.port_b_address_width = 8,
		ram_block9a_17.port_b_data_out_clear = "clear1",
		ram_block9a_17.port_b_data_out_clock = "clock1",
		ram_block9a_17.port_b_data_width = 2,
		ram_block9a_17.port_b_first_address = 0,
		ram_block9a_17.port_b_first_bit_number = 17,
		ram_block9a_17.port_b_last_address = 255,
		ram_block9a_17.port_b_logical_ram_depth = 256,
		ram_block9a_17.port_b_logical_ram_width = 96,
		ram_block9a_17.port_b_read_enable_clock = "clock1",
		ram_block9a_17.ram_block_type = "AUTO",
		ram_block9a_17.lpm_type = "cyclonev_ram_block";
	cyclonev_ram_block   ram_block9a_18
	( 
	.clk0(clock0),
	.clk1(clock1),
	.clr1(aclr1),
	.dftout(),
	.eccstatus(),
	.ena0(wren_a),
	.ena1(clocken1),
	.portaaddr({address_a_wire[8:0]}),
	.portadatain({data_a[18]}),
	.portadataout(),
	.portawe(wren_a),
	.portbaddr({address_b_wire[7:0]}),
	.portbaddrstall(addressstall_b),
	.portbdataout(wire_ram_block9a_18portbdataout[1:0]),
	.portbre(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portare(1'b1),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({2{1'b0}}),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1),
	.nerror(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block9a_18.clk0_core_clock_enable = "ena0",
		ram_block9a_18.clk0_input_clock_enable = "none",
		ram_block9a_18.clk1_core_clock_enable = "none",
		ram_block9a_18.clk1_input_clock_enable = "none",
		ram_block9a_18.clk1_output_clock_enable = "ena1",
		ram_block9a_18.connectivity_checking = "OFF",
		ram_block9a_18.data_interleave_offset_in_bits = 48,
		ram_block9a_18.data_interleave_width_in_bits = 1,
		ram_block9a_18.logical_ram_name = "ALTSYNCRAM",
		ram_block9a_18.mixed_port_feed_through_mode = "dont_care",
		ram_block9a_18.operation_mode = "dual_port",
		ram_block9a_18.port_a_address_width = 9,
		ram_block9a_18.port_a_data_width = 1,
		ram_block9a_18.port_a_first_address = 0,
		ram_block9a_18.port_a_first_bit_number = 18,
		ram_block9a_18.port_a_last_address = 511,
		ram_block9a_18.port_a_logical_ram_depth = 512,
		ram_block9a_18.port_a_logical_ram_width = 48,
		ram_block9a_18.port_b_address_clear = "clear1",
		ram_block9a_18.port_b_address_clock = "clock1",
		ram_block9a_18.port_b_address_width = 8,
		ram_block9a_18.port_b_data_out_clear = "clear1",
		ram_block9a_18.port_b_data_out_clock = "clock1",
		ram_block9a_18.port_b_data_width = 2,
		ram_block9a_18.port_b_first_address = 0,
		ram_block9a_18.port_b_first_bit_number = 18,
		ram_block9a_18.port_b_last_address = 255,
		ram_block9a_18.port_b_logical_ram_depth = 256,
		ram_block9a_18.port_b_logical_ram_width = 96,
		ram_block9a_18.port_b_read_enable_clock = "clock1",
		ram_block9a_18.ram_block_type = "AUTO",
		ram_block9a_18.lpm_type = "cyclonev_ram_block";
	cyclonev_ram_block   ram_block9a_19
	( 
	.clk0(clock0),
	.clk1(clock1),
	.clr1(aclr1),
	.dftout(),
	.eccstatus(),
	.ena0(wren_a),
	.ena1(clocken1),
	.portaaddr({address_a_wire[8:0]}),
	.portadatain({data_a[19]}),
	.portadataout(),
	.portawe(wren_a),
	.portbaddr({address_b_wire[7:0]}),
	.portbaddrstall(addressstall_b),
	.portbdataout(wire_ram_block9a_19portbdataout[1:0]),
	.portbre(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portare(1'b1),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({2{1'b0}}),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1),
	.nerror(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block9a_19.clk0_core_clock_enable = "ena0",
		ram_block9a_19.clk0_input_clock_enable = "none",
		ram_block9a_19.clk1_core_clock_enable = "none",
		ram_block9a_19.clk1_input_clock_enable = "none",
		ram_block9a_19.clk1_output_clock_enable = "ena1",
		ram_block9a_19.connectivity_checking = "OFF",
		ram_block9a_19.data_interleave_offset_in_bits = 48,
		ram_block9a_19.data_interleave_width_in_bits = 1,
		ram_block9a_19.logical_ram_name = "ALTSYNCRAM",
		ram_block9a_19.mixed_port_feed_through_mode = "dont_care",
		ram_block9a_19.operation_mode = "dual_port",
		ram_block9a_19.port_a_address_width = 9,
		ram_block9a_19.port_a_data_width = 1,
		ram_block9a_19.port_a_first_address = 0,
		ram_block9a_19.port_a_first_bit_number = 19,
		ram_block9a_19.port_a_last_address = 511,
		ram_block9a_19.port_a_logical_ram_depth = 512,
		ram_block9a_19.port_a_logical_ram_width = 48,
		ram_block9a_19.port_b_address_clear = "clear1",
		ram_block9a_19.port_b_address_clock = "clock1",
		ram_block9a_19.port_b_address_width = 8,
		ram_block9a_19.port_b_data_out_clear = "clear1",
		ram_block9a_19.port_b_data_out_clock = "clock1",
		ram_block9a_19.port_b_data_width = 2,
		ram_block9a_19.port_b_first_address = 0,
		ram_block9a_19.port_b_first_bit_number = 19,
		ram_block9a_19.port_b_last_address = 255,
		ram_block9a_19.port_b_logical_ram_depth = 256,
		ram_block9a_19.port_b_logical_ram_width = 96,
		ram_block9a_19.port_b_read_enable_clock = "clock1",
		ram_block9a_19.ram_block_type = "AUTO",
		ram_block9a_19.lpm_type = "cyclonev_ram_block";
	cyclonev_ram_block   ram_block9a_20
	( 
	.clk0(clock0),
	.clk1(clock1),
	.clr1(aclr1),
	.dftout(),
	.eccstatus(),
	.ena0(wren_a),
	.ena1(clocken1),
	.portaaddr({address_a_wire[8:0]}),
	.portadatain({data_a[20]}),
	.portadataout(),
	.portawe(wren_a),
	.portbaddr({address_b_wire[7:0]}),
	.portbaddrstall(addressstall_b),
	.portbdataout(wire_ram_block9a_20portbdataout[1:0]),
	.portbre(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portare(1'b1),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({2{1'b0}}),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1),
	.nerror(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block9a_20.clk0_core_clock_enable = "ena0",
		ram_block9a_20.clk0_input_clock_enable = "none",
		ram_block9a_20.clk1_core_clock_enable = "none",
		ram_block9a_20.clk1_input_clock_enable = "none",
		ram_block9a_20.clk1_output_clock_enable = "ena1",
		ram_block9a_20.connectivity_checking = "OFF",
		ram_block9a_20.data_interleave_offset_in_bits = 48,
		ram_block9a_20.data_interleave_width_in_bits = 1,
		ram_block9a_20.logical_ram_name = "ALTSYNCRAM",
		ram_block9a_20.mixed_port_feed_through_mode = "dont_care",
		ram_block9a_20.operation_mode = "dual_port",
		ram_block9a_20.port_a_address_width = 9,
		ram_block9a_20.port_a_data_width = 1,
		ram_block9a_20.port_a_first_address = 0,
		ram_block9a_20.port_a_first_bit_number = 20,
		ram_block9a_20.port_a_last_address = 511,
		ram_block9a_20.port_a_logical_ram_depth = 512,
		ram_block9a_20.port_a_logical_ram_width = 48,
		ram_block9a_20.port_b_address_clear = "clear1",
		ram_block9a_20.port_b_address_clock = "clock1",
		ram_block9a_20.port_b_address_width = 8,
		ram_block9a_20.port_b_data_out_clear = "clear1",
		ram_block9a_20.port_b_data_out_clock = "clock1",
		ram_block9a_20.port_b_data_width = 2,
		ram_block9a_20.port_b_first_address = 0,
		ram_block9a_20.port_b_first_bit_number = 20,
		ram_block9a_20.port_b_last_address = 255,
		ram_block9a_20.port_b_logical_ram_depth = 256,
		ram_block9a_20.port_b_logical_ram_width = 96,
		ram_block9a_20.port_b_read_enable_clock = "clock1",
		ram_block9a_20.ram_block_type = "AUTO",
		ram_block9a_20.lpm_type = "cyclonev_ram_block";
	cyclonev_ram_block   ram_block9a_21
	( 
	.clk0(clock0),
	.clk1(clock1),
	.clr1(aclr1),
	.dftout(),
	.eccstatus(),
	.ena0(wren_a),
	.ena1(clocken1),
	.portaaddr({address_a_wire[8:0]}),
	.portadatain({data_a[21]}),
	.portadataout(),
	.portawe(wren_a),
	.portbaddr({address_b_wire[7:0]}),
	.portbaddrstall(addressstall_b),
	.portbdataout(wire_ram_block9a_21portbdataout[1:0]),
	.portbre(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portare(1'b1),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({2{1'b0}}),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1),
	.nerror(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block9a_21.clk0_core_clock_enable = "ena0",
		ram_block9a_21.clk0_input_clock_enable = "none",
		ram_block9a_21.clk1_core_clock_enable = "none",
		ram_block9a_21.clk1_input_clock_enable = "none",
		ram_block9a_21.clk1_output_clock_enable = "ena1",
		ram_block9a_21.connectivity_checking = "OFF",
		ram_block9a_21.data_interleave_offset_in_bits = 48,
		ram_block9a_21.data_interleave_width_in_bits = 1,
		ram_block9a_21.logical_ram_name = "ALTSYNCRAM",
		ram_block9a_21.mixed_port_feed_through_mode = "dont_care",
		ram_block9a_21.operation_mode = "dual_port",
		ram_block9a_21.port_a_address_width = 9,
		ram_block9a_21.port_a_data_width = 1,
		ram_block9a_21.port_a_first_address = 0,
		ram_block9a_21.port_a_first_bit_number = 21,
		ram_block9a_21.port_a_last_address = 511,
		ram_block9a_21.port_a_logical_ram_depth = 512,
		ram_block9a_21.port_a_logical_ram_width = 48,
		ram_block9a_21.port_b_address_clear = "clear1",
		ram_block9a_21.port_b_address_clock = "clock1",
		ram_block9a_21.port_b_address_width = 8,
		ram_block9a_21.port_b_data_out_clear = "clear1",
		ram_block9a_21.port_b_data_out_clock = "clock1",
		ram_block9a_21.port_b_data_width = 2,
		ram_block9a_21.port_b_first_address = 0,
		ram_block9a_21.port_b_first_bit_number = 21,
		ram_block9a_21.port_b_last_address = 255,
		ram_block9a_21.port_b_logical_ram_depth = 256,
		ram_block9a_21.port_b_logical_ram_width = 96,
		ram_block9a_21.port_b_read_enable_clock = "clock1",
		ram_block9a_21.ram_block_type = "AUTO",
		ram_block9a_21.lpm_type = "cyclonev_ram_block";
	cyclonev_ram_block   ram_block9a_22
	( 
	.clk0(clock0),
	.clk1(clock1),
	.clr1(aclr1),
	.dftout(),
	.eccstatus(),
	.ena0(wren_a),
	.ena1(clocken1),
	.portaaddr({address_a_wire[8:0]}),
	.portadatain({data_a[22]}),
	.portadataout(),
	.portawe(wren_a),
	.portbaddr({address_b_wire[7:0]}),
	.portbaddrstall(addressstall_b),
	.portbdataout(wire_ram_block9a_22portbdataout[1:0]),
	.portbre(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portare(1'b1),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({2{1'b0}}),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1),
	.nerror(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block9a_22.clk0_core_clock_enable = "ena0",
		ram_block9a_22.clk0_input_clock_enable = "none",
		ram_block9a_22.clk1_core_clock_enable = "none",
		ram_block9a_22.clk1_input_clock_enable = "none",
		ram_block9a_22.clk1_output_clock_enable = "ena1",
		ram_block9a_22.connectivity_checking = "OFF",
		ram_block9a_22.data_interleave_offset_in_bits = 48,
		ram_block9a_22.data_interleave_width_in_bits = 1,
		ram_block9a_22.logical_ram_name = "ALTSYNCRAM",
		ram_block9a_22.mixed_port_feed_through_mode = "dont_care",
		ram_block9a_22.operation_mode = "dual_port",
		ram_block9a_22.port_a_address_width = 9,
		ram_block9a_22.port_a_data_width = 1,
		ram_block9a_22.port_a_first_address = 0,
		ram_block9a_22.port_a_first_bit_number = 22,
		ram_block9a_22.port_a_last_address = 511,
		ram_block9a_22.port_a_logical_ram_depth = 512,
		ram_block9a_22.port_a_logical_ram_width = 48,
		ram_block9a_22.port_b_address_clear = "clear1",
		ram_block9a_22.port_b_address_clock = "clock1",
		ram_block9a_22.port_b_address_width = 8,
		ram_block9a_22.port_b_data_out_clear = "clear1",
		ram_block9a_22.port_b_data_out_clock = "clock1",
		ram_block9a_22.port_b_data_width = 2,
		ram_block9a_22.port_b_first_address = 0,
		ram_block9a_22.port_b_first_bit_number = 22,
		ram_block9a_22.port_b_last_address = 255,
		ram_block9a_22.port_b_logical_ram_depth = 256,
		ram_block9a_22.port_b_logical_ram_width = 96,
		ram_block9a_22.port_b_read_enable_clock = "clock1",
		ram_block9a_22.ram_block_type = "AUTO",
		ram_block9a_22.lpm_type = "cyclonev_ram_block";
	cyclonev_ram_block   ram_block9a_23
	( 
	.clk0(clock0),
	.clk1(clock1),
	.clr1(aclr1),
	.dftout(),
	.eccstatus(),
	.ena0(wren_a),
	.ena1(clocken1),
	.portaaddr({address_a_wire[8:0]}),
	.portadatain({data_a[23]}),
	.portadataout(),
	.portawe(wren_a),
	.portbaddr({address_b_wire[7:0]}),
	.portbaddrstall(addressstall_b),
	.portbdataout(wire_ram_block9a_23portbdataout[1:0]),
	.portbre(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portare(1'b1),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({2{1'b0}}),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1),
	.nerror(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block9a_23.clk0_core_clock_enable = "ena0",
		ram_block9a_23.clk0_input_clock_enable = "none",
		ram_block9a_23.clk1_core_clock_enable = "none",
		ram_block9a_23.clk1_input_clock_enable = "none",
		ram_block9a_23.clk1_output_clock_enable = "ena1",
		ram_block9a_23.connectivity_checking = "OFF",
		ram_block9a_23.data_interleave_offset_in_bits = 48,
		ram_block9a_23.data_interleave_width_in_bits = 1,
		ram_block9a_23.logical_ram_name = "ALTSYNCRAM",
		ram_block9a_23.mixed_port_feed_through_mode = "dont_care",
		ram_block9a_23.operation_mode = "dual_port",
		ram_block9a_23.port_a_address_width = 9,
		ram_block9a_23.port_a_data_width = 1,
		ram_block9a_23.port_a_first_address = 0,
		ram_block9a_23.port_a_first_bit_number = 23,
		ram_block9a_23.port_a_last_address = 511,
		ram_block9a_23.port_a_logical_ram_depth = 512,
		ram_block9a_23.port_a_logical_ram_width = 48,
		ram_block9a_23.port_b_address_clear = "clear1",
		ram_block9a_23.port_b_address_clock = "clock1",
		ram_block9a_23.port_b_address_width = 8,
		ram_block9a_23.port_b_data_out_clear = "clear1",
		ram_block9a_23.port_b_data_out_clock = "clock1",
		ram_block9a_23.port_b_data_width = 2,
		ram_block9a_23.port_b_first_address = 0,
		ram_block9a_23.port_b_first_bit_number = 23,
		ram_block9a_23.port_b_last_address = 255,
		ram_block9a_23.port_b_logical_ram_depth = 256,
		ram_block9a_23.port_b_logical_ram_width = 96,
		ram_block9a_23.port_b_read_enable_clock = "clock1",
		ram_block9a_23.ram_block_type = "AUTO",
		ram_block9a_23.lpm_type = "cyclonev_ram_block";
	cyclonev_ram_block   ram_block9a_24
	( 
	.clk0(clock0),
	.clk1(clock1),
	.clr1(aclr1),
	.dftout(),
	.eccstatus(),
	.ena0(wren_a),
	.ena1(clocken1),
	.portaaddr({address_a_wire[8:0]}),
	.portadatain({data_a[24]}),
	.portadataout(),
	.portawe(wren_a),
	.portbaddr({address_b_wire[7:0]}),
	.portbaddrstall(addressstall_b),
	.portbdataout(wire_ram_block9a_24portbdataout[1:0]),
	.portbre(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portare(1'b1),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({2{1'b0}}),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1),
	.nerror(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block9a_24.clk0_core_clock_enable = "ena0",
		ram_block9a_24.clk0_input_clock_enable = "none",
		ram_block9a_24.clk1_core_clock_enable = "none",
		ram_block9a_24.clk1_input_clock_enable = "none",
		ram_block9a_24.clk1_output_clock_enable = "ena1",
		ram_block9a_24.connectivity_checking = "OFF",
		ram_block9a_24.data_interleave_offset_in_bits = 48,
		ram_block9a_24.data_interleave_width_in_bits = 1,
		ram_block9a_24.logical_ram_name = "ALTSYNCRAM",
		ram_block9a_24.mixed_port_feed_through_mode = "dont_care",
		ram_block9a_24.operation_mode = "dual_port",
		ram_block9a_24.port_a_address_width = 9,
		ram_block9a_24.port_a_data_width = 1,
		ram_block9a_24.port_a_first_address = 0,
		ram_block9a_24.port_a_first_bit_number = 24,
		ram_block9a_24.port_a_last_address = 511,
		ram_block9a_24.port_a_logical_ram_depth = 512,
		ram_block9a_24.port_a_logical_ram_width = 48,
		ram_block9a_24.port_b_address_clear = "clear1",
		ram_block9a_24.port_b_address_clock = "clock1",
		ram_block9a_24.port_b_address_width = 8,
		ram_block9a_24.port_b_data_out_clear = "clear1",
		ram_block9a_24.port_b_data_out_clock = "clock1",
		ram_block9a_24.port_b_data_width = 2,
		ram_block9a_24.port_b_first_address = 0,
		ram_block9a_24.port_b_first_bit_number = 24,
		ram_block9a_24.port_b_last_address = 255,
		ram_block9a_24.port_b_logical_ram_depth = 256,
		ram_block9a_24.port_b_logical_ram_width = 96,
		ram_block9a_24.port_b_read_enable_clock = "clock1",
		ram_block9a_24.ram_block_type = "AUTO",
		ram_block9a_24.lpm_type = "cyclonev_ram_block";
	cyclonev_ram_block   ram_block9a_25
	( 
	.clk0(clock0),
	.clk1(clock1),
	.clr1(aclr1),
	.dftout(),
	.eccstatus(),
	.ena0(wren_a),
	.ena1(clocken1),
	.portaaddr({address_a_wire[8:0]}),
	.portadatain({data_a[25]}),
	.portadataout(),
	.portawe(wren_a),
	.portbaddr({address_b_wire[7:0]}),
	.portbaddrstall(addressstall_b),
	.portbdataout(wire_ram_block9a_25portbdataout[1:0]),
	.portbre(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portare(1'b1),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({2{1'b0}}),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1),
	.nerror(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block9a_25.clk0_core_clock_enable = "ena0",
		ram_block9a_25.clk0_input_clock_enable = "none",
		ram_block9a_25.clk1_core_clock_enable = "none",
		ram_block9a_25.clk1_input_clock_enable = "none",
		ram_block9a_25.clk1_output_clock_enable = "ena1",
		ram_block9a_25.connectivity_checking = "OFF",
		ram_block9a_25.data_interleave_offset_in_bits = 48,
		ram_block9a_25.data_interleave_width_in_bits = 1,
		ram_block9a_25.logical_ram_name = "ALTSYNCRAM",
		ram_block9a_25.mixed_port_feed_through_mode = "dont_care",
		ram_block9a_25.operation_mode = "dual_port",
		ram_block9a_25.port_a_address_width = 9,
		ram_block9a_25.port_a_data_width = 1,
		ram_block9a_25.port_a_first_address = 0,
		ram_block9a_25.port_a_first_bit_number = 25,
		ram_block9a_25.port_a_last_address = 511,
		ram_block9a_25.port_a_logical_ram_depth = 512,
		ram_block9a_25.port_a_logical_ram_width = 48,
		ram_block9a_25.port_b_address_clear = "clear1",
		ram_block9a_25.port_b_address_clock = "clock1",
		ram_block9a_25.port_b_address_width = 8,
		ram_block9a_25.port_b_data_out_clear = "clear1",
		ram_block9a_25.port_b_data_out_clock = "clock1",
		ram_block9a_25.port_b_data_width = 2,
		ram_block9a_25.port_b_first_address = 0,
		ram_block9a_25.port_b_first_bit_number = 25,
		ram_block9a_25.port_b_last_address = 255,
		ram_block9a_25.port_b_logical_ram_depth = 256,
		ram_block9a_25.port_b_logical_ram_width = 96,
		ram_block9a_25.port_b_read_enable_clock = "clock1",
		ram_block9a_25.ram_block_type = "AUTO",
		ram_block9a_25.lpm_type = "cyclonev_ram_block";
	cyclonev_ram_block   ram_block9a_26
	( 
	.clk0(clock0),
	.clk1(clock1),
	.clr1(aclr1),
	.dftout(),
	.eccstatus(),
	.ena0(wren_a),
	.ena1(clocken1),
	.portaaddr({address_a_wire[8:0]}),
	.portadatain({data_a[26]}),
	.portadataout(),
	.portawe(wren_a),
	.portbaddr({address_b_wire[7:0]}),
	.portbaddrstall(addressstall_b),
	.portbdataout(wire_ram_block9a_26portbdataout[1:0]),
	.portbre(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portare(1'b1),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({2{1'b0}}),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1),
	.nerror(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block9a_26.clk0_core_clock_enable = "ena0",
		ram_block9a_26.clk0_input_clock_enable = "none",
		ram_block9a_26.clk1_core_clock_enable = "none",
		ram_block9a_26.clk1_input_clock_enable = "none",
		ram_block9a_26.clk1_output_clock_enable = "ena1",
		ram_block9a_26.connectivity_checking = "OFF",
		ram_block9a_26.data_interleave_offset_in_bits = 48,
		ram_block9a_26.data_interleave_width_in_bits = 1,
		ram_block9a_26.logical_ram_name = "ALTSYNCRAM",
		ram_block9a_26.mixed_port_feed_through_mode = "dont_care",
		ram_block9a_26.operation_mode = "dual_port",
		ram_block9a_26.port_a_address_width = 9,
		ram_block9a_26.port_a_data_width = 1,
		ram_block9a_26.port_a_first_address = 0,
		ram_block9a_26.port_a_first_bit_number = 26,
		ram_block9a_26.port_a_last_address = 511,
		ram_block9a_26.port_a_logical_ram_depth = 512,
		ram_block9a_26.port_a_logical_ram_width = 48,
		ram_block9a_26.port_b_address_clear = "clear1",
		ram_block9a_26.port_b_address_clock = "clock1",
		ram_block9a_26.port_b_address_width = 8,
		ram_block9a_26.port_b_data_out_clear = "clear1",
		ram_block9a_26.port_b_data_out_clock = "clock1",
		ram_block9a_26.port_b_data_width = 2,
		ram_block9a_26.port_b_first_address = 0,
		ram_block9a_26.port_b_first_bit_number = 26,
		ram_block9a_26.port_b_last_address = 255,
		ram_block9a_26.port_b_logical_ram_depth = 256,
		ram_block9a_26.port_b_logical_ram_width = 96,
		ram_block9a_26.port_b_read_enable_clock = "clock1",
		ram_block9a_26.ram_block_type = "AUTO",
		ram_block9a_26.lpm_type = "cyclonev_ram_block";
	cyclonev_ram_block   ram_block9a_27
	( 
	.clk0(clock0),
	.clk1(clock1),
	.clr1(aclr1),
	.dftout(),
	.eccstatus(),
	.ena0(wren_a),
	.ena1(clocken1),
	.portaaddr({address_a_wire[8:0]}),
	.portadatain({data_a[27]}),
	.portadataout(),
	.portawe(wren_a),
	.portbaddr({address_b_wire[7:0]}),
	.portbaddrstall(addressstall_b),
	.portbdataout(wire_ram_block9a_27portbdataout[1:0]),
	.portbre(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portare(1'b1),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({2{1'b0}}),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1),
	.nerror(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block9a_27.clk0_core_clock_enable = "ena0",
		ram_block9a_27.clk0_input_clock_enable = "none",
		ram_block9a_27.clk1_core_clock_enable = "none",
		ram_block9a_27.clk1_input_clock_enable = "none",
		ram_block9a_27.clk1_output_clock_enable = "ena1",
		ram_block9a_27.connectivity_checking = "OFF",
		ram_block9a_27.data_interleave_offset_in_bits = 48,
		ram_block9a_27.data_interleave_width_in_bits = 1,
		ram_block9a_27.logical_ram_name = "ALTSYNCRAM",
		ram_block9a_27.mixed_port_feed_through_mode = "dont_care",
		ram_block9a_27.operation_mode = "dual_port",
		ram_block9a_27.port_a_address_width = 9,
		ram_block9a_27.port_a_data_width = 1,
		ram_block9a_27.port_a_first_address = 0,
		ram_block9a_27.port_a_first_bit_number = 27,
		ram_block9a_27.port_a_last_address = 511,
		ram_block9a_27.port_a_logical_ram_depth = 512,
		ram_block9a_27.port_a_logical_ram_width = 48,
		ram_block9a_27.port_b_address_clear = "clear1",
		ram_block9a_27.port_b_address_clock = "clock1",
		ram_block9a_27.port_b_address_width = 8,
		ram_block9a_27.port_b_data_out_clear = "clear1",
		ram_block9a_27.port_b_data_out_clock = "clock1",
		ram_block9a_27.port_b_data_width = 2,
		ram_block9a_27.port_b_first_address = 0,
		ram_block9a_27.port_b_first_bit_number = 27,
		ram_block9a_27.port_b_last_address = 255,
		ram_block9a_27.port_b_logical_ram_depth = 256,
		ram_block9a_27.port_b_logical_ram_width = 96,
		ram_block9a_27.port_b_read_enable_clock = "clock1",
		ram_block9a_27.ram_block_type = "AUTO",
		ram_block9a_27.lpm_type = "cyclonev_ram_block";
	cyclonev_ram_block   ram_block9a_28
	( 
	.clk0(clock0),
	.clk1(clock1),
	.clr1(aclr1),
	.dftout(),
	.eccstatus(),
	.ena0(wren_a),
	.ena1(clocken1),
	.portaaddr({address_a_wire[8:0]}),
	.portadatain({data_a[28]}),
	.portadataout(),
	.portawe(wren_a),
	.portbaddr({address_b_wire[7:0]}),
	.portbaddrstall(addressstall_b),
	.portbdataout(wire_ram_block9a_28portbdataout[1:0]),
	.portbre(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portare(1'b1),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({2{1'b0}}),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1),
	.nerror(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block9a_28.clk0_core_clock_enable = "ena0",
		ram_block9a_28.clk0_input_clock_enable = "none",
		ram_block9a_28.clk1_core_clock_enable = "none",
		ram_block9a_28.clk1_input_clock_enable = "none",
		ram_block9a_28.clk1_output_clock_enable = "ena1",
		ram_block9a_28.connectivity_checking = "OFF",
		ram_block9a_28.data_interleave_offset_in_bits = 48,
		ram_block9a_28.data_interleave_width_in_bits = 1,
		ram_block9a_28.logical_ram_name = "ALTSYNCRAM",
		ram_block9a_28.mixed_port_feed_through_mode = "dont_care",
		ram_block9a_28.operation_mode = "dual_port",
		ram_block9a_28.port_a_address_width = 9,
		ram_block9a_28.port_a_data_width = 1,
		ram_block9a_28.port_a_first_address = 0,
		ram_block9a_28.port_a_first_bit_number = 28,
		ram_block9a_28.port_a_last_address = 511,
		ram_block9a_28.port_a_logical_ram_depth = 512,
		ram_block9a_28.port_a_logical_ram_width = 48,
		ram_block9a_28.port_b_address_clear = "clear1",
		ram_block9a_28.port_b_address_clock = "clock1",
		ram_block9a_28.port_b_address_width = 8,
		ram_block9a_28.port_b_data_out_clear = "clear1",
		ram_block9a_28.port_b_data_out_clock = "clock1",
		ram_block9a_28.port_b_data_width = 2,
		ram_block9a_28.port_b_first_address = 0,
		ram_block9a_28.port_b_first_bit_number = 28,
		ram_block9a_28.port_b_last_address = 255,
		ram_block9a_28.port_b_logical_ram_depth = 256,
		ram_block9a_28.port_b_logical_ram_width = 96,
		ram_block9a_28.port_b_read_enable_clock = "clock1",
		ram_block9a_28.ram_block_type = "AUTO",
		ram_block9a_28.lpm_type = "cyclonev_ram_block";
	cyclonev_ram_block   ram_block9a_29
	( 
	.clk0(clock0),
	.clk1(clock1),
	.clr1(aclr1),
	.dftout(),
	.eccstatus(),
	.ena0(wren_a),
	.ena1(clocken1),
	.portaaddr({address_a_wire[8:0]}),
	.portadatain({data_a[29]}),
	.portadataout(),
	.portawe(wren_a),
	.portbaddr({address_b_wire[7:0]}),
	.portbaddrstall(addressstall_b),
	.portbdataout(wire_ram_block9a_29portbdataout[1:0]),
	.portbre(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portare(1'b1),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({2{1'b0}}),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1),
	.nerror(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block9a_29.clk0_core_clock_enable = "ena0",
		ram_block9a_29.clk0_input_clock_enable = "none",
		ram_block9a_29.clk1_core_clock_enable = "none",
		ram_block9a_29.clk1_input_clock_enable = "none",
		ram_block9a_29.clk1_output_clock_enable = "ena1",
		ram_block9a_29.connectivity_checking = "OFF",
		ram_block9a_29.data_interleave_offset_in_bits = 48,
		ram_block9a_29.data_interleave_width_in_bits = 1,
		ram_block9a_29.logical_ram_name = "ALTSYNCRAM",
		ram_block9a_29.mixed_port_feed_through_mode = "dont_care",
		ram_block9a_29.operation_mode = "dual_port",
		ram_block9a_29.port_a_address_width = 9,
		ram_block9a_29.port_a_data_width = 1,
		ram_block9a_29.port_a_first_address = 0,
		ram_block9a_29.port_a_first_bit_number = 29,
		ram_block9a_29.port_a_last_address = 511,
		ram_block9a_29.port_a_logical_ram_depth = 512,
		ram_block9a_29.port_a_logical_ram_width = 48,
		ram_block9a_29.port_b_address_clear = "clear1",
		ram_block9a_29.port_b_address_clock = "clock1",
		ram_block9a_29.port_b_address_width = 8,
		ram_block9a_29.port_b_data_out_clear = "clear1",
		ram_block9a_29.port_b_data_out_clock = "clock1",
		ram_block9a_29.port_b_data_width = 2,
		ram_block9a_29.port_b_first_address = 0,
		ram_block9a_29.port_b_first_bit_number = 29,
		ram_block9a_29.port_b_last_address = 255,
		ram_block9a_29.port_b_logical_ram_depth = 256,
		ram_block9a_29.port_b_logical_ram_width = 96,
		ram_block9a_29.port_b_read_enable_clock = "clock1",
		ram_block9a_29.ram_block_type = "AUTO",
		ram_block9a_29.lpm_type = "cyclonev_ram_block";
	cyclonev_ram_block   ram_block9a_30
	( 
	.clk0(clock0),
	.clk1(clock1),
	.clr1(aclr1),
	.dftout(),
	.eccstatus(),
	.ena0(wren_a),
	.ena1(clocken1),
	.portaaddr({address_a_wire[8:0]}),
	.portadatain({data_a[30]}),
	.portadataout(),
	.portawe(wren_a),
	.portbaddr({address_b_wire[7:0]}),
	.portbaddrstall(addressstall_b),
	.portbdataout(wire_ram_block9a_30portbdataout[1:0]),
	.portbre(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portare(1'b1),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({2{1'b0}}),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1),
	.nerror(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block9a_30.clk0_core_clock_enable = "ena0",
		ram_block9a_30.clk0_input_clock_enable = "none",
		ram_block9a_30.clk1_core_clock_enable = "none",
		ram_block9a_30.clk1_input_clock_enable = "none",
		ram_block9a_30.clk1_output_clock_enable = "ena1",
		ram_block9a_30.connectivity_checking = "OFF",
		ram_block9a_30.data_interleave_offset_in_bits = 48,
		ram_block9a_30.data_interleave_width_in_bits = 1,
		ram_block9a_30.logical_ram_name = "ALTSYNCRAM",
		ram_block9a_30.mixed_port_feed_through_mode = "dont_care",
		ram_block9a_30.operation_mode = "dual_port",
		ram_block9a_30.port_a_address_width = 9,
		ram_block9a_30.port_a_data_width = 1,
		ram_block9a_30.port_a_first_address = 0,
		ram_block9a_30.port_a_first_bit_number = 30,
		ram_block9a_30.port_a_last_address = 511,
		ram_block9a_30.port_a_logical_ram_depth = 512,
		ram_block9a_30.port_a_logical_ram_width = 48,
		ram_block9a_30.port_b_address_clear = "clear1",
		ram_block9a_30.port_b_address_clock = "clock1",
		ram_block9a_30.port_b_address_width = 8,
		ram_block9a_30.port_b_data_out_clear = "clear1",
		ram_block9a_30.port_b_data_out_clock = "clock1",
		ram_block9a_30.port_b_data_width = 2,
		ram_block9a_30.port_b_first_address = 0,
		ram_block9a_30.port_b_first_bit_number = 30,
		ram_block9a_30.port_b_last_address = 255,
		ram_block9a_30.port_b_logical_ram_depth = 256,
		ram_block9a_30.port_b_logical_ram_width = 96,
		ram_block9a_30.port_b_read_enable_clock = "clock1",
		ram_block9a_30.ram_block_type = "AUTO",
		ram_block9a_30.lpm_type = "cyclonev_ram_block";
	cyclonev_ram_block   ram_block9a_31
	( 
	.clk0(clock0),
	.clk1(clock1),
	.clr1(aclr1),
	.dftout(),
	.eccstatus(),
	.ena0(wren_a),
	.ena1(clocken1),
	.portaaddr({address_a_wire[8:0]}),
	.portadatain({data_a[31]}),
	.portadataout(),
	.portawe(wren_a),
	.portbaddr({address_b_wire[7:0]}),
	.portbaddrstall(addressstall_b),
	.portbdataout(wire_ram_block9a_31portbdataout[1:0]),
	.portbre(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portare(1'b1),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({2{1'b0}}),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1),
	.nerror(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block9a_31.clk0_core_clock_enable = "ena0",
		ram_block9a_31.clk0_input_clock_enable = "none",
		ram_block9a_31.clk1_core_clock_enable = "none",
		ram_block9a_31.clk1_input_clock_enable = "none",
		ram_block9a_31.clk1_output_clock_enable = "ena1",
		ram_block9a_31.connectivity_checking = "OFF",
		ram_block9a_31.data_interleave_offset_in_bits = 48,
		ram_block9a_31.data_interleave_width_in_bits = 1,
		ram_block9a_31.logical_ram_name = "ALTSYNCRAM",
		ram_block9a_31.mixed_port_feed_through_mode = "dont_care",
		ram_block9a_31.operation_mode = "dual_port",
		ram_block9a_31.port_a_address_width = 9,
		ram_block9a_31.port_a_data_width = 1,
		ram_block9a_31.port_a_first_address = 0,
		ram_block9a_31.port_a_first_bit_number = 31,
		ram_block9a_31.port_a_last_address = 511,
		ram_block9a_31.port_a_logical_ram_depth = 512,
		ram_block9a_31.port_a_logical_ram_width = 48,
		ram_block9a_31.port_b_address_clear = "clear1",
		ram_block9a_31.port_b_address_clock = "clock1",
		ram_block9a_31.port_b_address_width = 8,
		ram_block9a_31.port_b_data_out_clear = "clear1",
		ram_block9a_31.port_b_data_out_clock = "clock1",
		ram_block9a_31.port_b_data_width = 2,
		ram_block9a_31.port_b_first_address = 0,
		ram_block9a_31.port_b_first_bit_number = 31,
		ram_block9a_31.port_b_last_address = 255,
		ram_block9a_31.port_b_logical_ram_depth = 256,
		ram_block9a_31.port_b_logical_ram_width = 96,
		ram_block9a_31.port_b_read_enable_clock = "clock1",
		ram_block9a_31.ram_block_type = "AUTO",
		ram_block9a_31.lpm_type = "cyclonev_ram_block";
	cyclonev_ram_block   ram_block9a_32
	( 
	.clk0(clock0),
	.clk1(clock1),
	.clr1(aclr1),
	.dftout(),
	.eccstatus(),
	.ena0(wren_a),
	.ena1(clocken1),
	.portaaddr({address_a_wire[8:0]}),
	.portadatain({data_a[32]}),
	.portadataout(),
	.portawe(wren_a),
	.portbaddr({address_b_wire[7:0]}),
	.portbaddrstall(addressstall_b),
	.portbdataout(wire_ram_block9a_32portbdataout[1:0]),
	.portbre(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portare(1'b1),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({2{1'b0}}),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1),
	.nerror(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block9a_32.clk0_core_clock_enable = "ena0",
		ram_block9a_32.clk0_input_clock_enable = "none",
		ram_block9a_32.clk1_core_clock_enable = "none",
		ram_block9a_32.clk1_input_clock_enable = "none",
		ram_block9a_32.clk1_output_clock_enable = "ena1",
		ram_block9a_32.connectivity_checking = "OFF",
		ram_block9a_32.data_interleave_offset_in_bits = 48,
		ram_block9a_32.data_interleave_width_in_bits = 1,
		ram_block9a_32.logical_ram_name = "ALTSYNCRAM",
		ram_block9a_32.mixed_port_feed_through_mode = "dont_care",
		ram_block9a_32.operation_mode = "dual_port",
		ram_block9a_32.port_a_address_width = 9,
		ram_block9a_32.port_a_data_width = 1,
		ram_block9a_32.port_a_first_address = 0,
		ram_block9a_32.port_a_first_bit_number = 32,
		ram_block9a_32.port_a_last_address = 511,
		ram_block9a_32.port_a_logical_ram_depth = 512,
		ram_block9a_32.port_a_logical_ram_width = 48,
		ram_block9a_32.port_b_address_clear = "clear1",
		ram_block9a_32.port_b_address_clock = "clock1",
		ram_block9a_32.port_b_address_width = 8,
		ram_block9a_32.port_b_data_out_clear = "clear1",
		ram_block9a_32.port_b_data_out_clock = "clock1",
		ram_block9a_32.port_b_data_width = 2,
		ram_block9a_32.port_b_first_address = 0,
		ram_block9a_32.port_b_first_bit_number = 32,
		ram_block9a_32.port_b_last_address = 255,
		ram_block9a_32.port_b_logical_ram_depth = 256,
		ram_block9a_32.port_b_logical_ram_width = 96,
		ram_block9a_32.port_b_read_enable_clock = "clock1",
		ram_block9a_32.ram_block_type = "AUTO",
		ram_block9a_32.lpm_type = "cyclonev_ram_block";
	cyclonev_ram_block   ram_block9a_33
	( 
	.clk0(clock0),
	.clk1(clock1),
	.clr1(aclr1),
	.dftout(),
	.eccstatus(),
	.ena0(wren_a),
	.ena1(clocken1),
	.portaaddr({address_a_wire[8:0]}),
	.portadatain({data_a[33]}),
	.portadataout(),
	.portawe(wren_a),
	.portbaddr({address_b_wire[7:0]}),
	.portbaddrstall(addressstall_b),
	.portbdataout(wire_ram_block9a_33portbdataout[1:0]),
	.portbre(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portare(1'b1),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({2{1'b0}}),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1),
	.nerror(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block9a_33.clk0_core_clock_enable = "ena0",
		ram_block9a_33.clk0_input_clock_enable = "none",
		ram_block9a_33.clk1_core_clock_enable = "none",
		ram_block9a_33.clk1_input_clock_enable = "none",
		ram_block9a_33.clk1_output_clock_enable = "ena1",
		ram_block9a_33.connectivity_checking = "OFF",
		ram_block9a_33.data_interleave_offset_in_bits = 48,
		ram_block9a_33.data_interleave_width_in_bits = 1,
		ram_block9a_33.logical_ram_name = "ALTSYNCRAM",
		ram_block9a_33.mixed_port_feed_through_mode = "dont_care",
		ram_block9a_33.operation_mode = "dual_port",
		ram_block9a_33.port_a_address_width = 9,
		ram_block9a_33.port_a_data_width = 1,
		ram_block9a_33.port_a_first_address = 0,
		ram_block9a_33.port_a_first_bit_number = 33,
		ram_block9a_33.port_a_last_address = 511,
		ram_block9a_33.port_a_logical_ram_depth = 512,
		ram_block9a_33.port_a_logical_ram_width = 48,
		ram_block9a_33.port_b_address_clear = "clear1",
		ram_block9a_33.port_b_address_clock = "clock1",
		ram_block9a_33.port_b_address_width = 8,
		ram_block9a_33.port_b_data_out_clear = "clear1",
		ram_block9a_33.port_b_data_out_clock = "clock1",
		ram_block9a_33.port_b_data_width = 2,
		ram_block9a_33.port_b_first_address = 0,
		ram_block9a_33.port_b_first_bit_number = 33,
		ram_block9a_33.port_b_last_address = 255,
		ram_block9a_33.port_b_logical_ram_depth = 256,
		ram_block9a_33.port_b_logical_ram_width = 96,
		ram_block9a_33.port_b_read_enable_clock = "clock1",
		ram_block9a_33.ram_block_type = "AUTO",
		ram_block9a_33.lpm_type = "cyclonev_ram_block";
	cyclonev_ram_block   ram_block9a_34
	( 
	.clk0(clock0),
	.clk1(clock1),
	.clr1(aclr1),
	.dftout(),
	.eccstatus(),
	.ena0(wren_a),
	.ena1(clocken1),
	.portaaddr({address_a_wire[8:0]}),
	.portadatain({data_a[34]}),
	.portadataout(),
	.portawe(wren_a),
	.portbaddr({address_b_wire[7:0]}),
	.portbaddrstall(addressstall_b),
	.portbdataout(wire_ram_block9a_34portbdataout[1:0]),
	.portbre(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portare(1'b1),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({2{1'b0}}),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1),
	.nerror(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block9a_34.clk0_core_clock_enable = "ena0",
		ram_block9a_34.clk0_input_clock_enable = "none",
		ram_block9a_34.clk1_core_clock_enable = "none",
		ram_block9a_34.clk1_input_clock_enable = "none",
		ram_block9a_34.clk1_output_clock_enable = "ena1",
		ram_block9a_34.connectivity_checking = "OFF",
		ram_block9a_34.data_interleave_offset_in_bits = 48,
		ram_block9a_34.data_interleave_width_in_bits = 1,
		ram_block9a_34.logical_ram_name = "ALTSYNCRAM",
		ram_block9a_34.mixed_port_feed_through_mode = "dont_care",
		ram_block9a_34.operation_mode = "dual_port",
		ram_block9a_34.port_a_address_width = 9,
		ram_block9a_34.port_a_data_width = 1,
		ram_block9a_34.port_a_first_address = 0,
		ram_block9a_34.port_a_first_bit_number = 34,
		ram_block9a_34.port_a_last_address = 511,
		ram_block9a_34.port_a_logical_ram_depth = 512,
		ram_block9a_34.port_a_logical_ram_width = 48,
		ram_block9a_34.port_b_address_clear = "clear1",
		ram_block9a_34.port_b_address_clock = "clock1",
		ram_block9a_34.port_b_address_width = 8,
		ram_block9a_34.port_b_data_out_clear = "clear1",
		ram_block9a_34.port_b_data_out_clock = "clock1",
		ram_block9a_34.port_b_data_width = 2,
		ram_block9a_34.port_b_first_address = 0,
		ram_block9a_34.port_b_first_bit_number = 34,
		ram_block9a_34.port_b_last_address = 255,
		ram_block9a_34.port_b_logical_ram_depth = 256,
		ram_block9a_34.port_b_logical_ram_width = 96,
		ram_block9a_34.port_b_read_enable_clock = "clock1",
		ram_block9a_34.ram_block_type = "AUTO",
		ram_block9a_34.lpm_type = "cyclonev_ram_block";
	cyclonev_ram_block   ram_block9a_35
	( 
	.clk0(clock0),
	.clk1(clock1),
	.clr1(aclr1),
	.dftout(),
	.eccstatus(),
	.ena0(wren_a),
	.ena1(clocken1),
	.portaaddr({address_a_wire[8:0]}),
	.portadatain({data_a[35]}),
	.portadataout(),
	.portawe(wren_a),
	.portbaddr({address_b_wire[7:0]}),
	.portbaddrstall(addressstall_b),
	.portbdataout(wire_ram_block9a_35portbdataout[1:0]),
	.portbre(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portare(1'b1),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({2{1'b0}}),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1),
	.nerror(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block9a_35.clk0_core_clock_enable = "ena0",
		ram_block9a_35.clk0_input_clock_enable = "none",
		ram_block9a_35.clk1_core_clock_enable = "none",
		ram_block9a_35.clk1_input_clock_enable = "none",
		ram_block9a_35.clk1_output_clock_enable = "ena1",
		ram_block9a_35.connectivity_checking = "OFF",
		ram_block9a_35.data_interleave_offset_in_bits = 48,
		ram_block9a_35.data_interleave_width_in_bits = 1,
		ram_block9a_35.logical_ram_name = "ALTSYNCRAM",
		ram_block9a_35.mixed_port_feed_through_mode = "dont_care",
		ram_block9a_35.operation_mode = "dual_port",
		ram_block9a_35.port_a_address_width = 9,
		ram_block9a_35.port_a_data_width = 1,
		ram_block9a_35.port_a_first_address = 0,
		ram_block9a_35.port_a_first_bit_number = 35,
		ram_block9a_35.port_a_last_address = 511,
		ram_block9a_35.port_a_logical_ram_depth = 512,
		ram_block9a_35.port_a_logical_ram_width = 48,
		ram_block9a_35.port_b_address_clear = "clear1",
		ram_block9a_35.port_b_address_clock = "clock1",
		ram_block9a_35.port_b_address_width = 8,
		ram_block9a_35.port_b_data_out_clear = "clear1",
		ram_block9a_35.port_b_data_out_clock = "clock1",
		ram_block9a_35.port_b_data_width = 2,
		ram_block9a_35.port_b_first_address = 0,
		ram_block9a_35.port_b_first_bit_number = 35,
		ram_block9a_35.port_b_last_address = 255,
		ram_block9a_35.port_b_logical_ram_depth = 256,
		ram_block9a_35.port_b_logical_ram_width = 96,
		ram_block9a_35.port_b_read_enable_clock = "clock1",
		ram_block9a_35.ram_block_type = "AUTO",
		ram_block9a_35.lpm_type = "cyclonev_ram_block";
	cyclonev_ram_block   ram_block9a_36
	( 
	.clk0(clock0),
	.clk1(clock1),
	.clr1(aclr1),
	.dftout(),
	.eccstatus(),
	.ena0(wren_a),
	.ena1(clocken1),
	.portaaddr({address_a_wire[8:0]}),
	.portadatain({data_a[36]}),
	.portadataout(),
	.portawe(wren_a),
	.portbaddr({address_b_wire[7:0]}),
	.portbaddrstall(addressstall_b),
	.portbdataout(wire_ram_block9a_36portbdataout[1:0]),
	.portbre(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portare(1'b1),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({2{1'b0}}),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1),
	.nerror(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block9a_36.clk0_core_clock_enable = "ena0",
		ram_block9a_36.clk0_input_clock_enable = "none",
		ram_block9a_36.clk1_core_clock_enable = "none",
		ram_block9a_36.clk1_input_clock_enable = "none",
		ram_block9a_36.clk1_output_clock_enable = "ena1",
		ram_block9a_36.connectivity_checking = "OFF",
		ram_block9a_36.data_interleave_offset_in_bits = 48,
		ram_block9a_36.data_interleave_width_in_bits = 1,
		ram_block9a_36.logical_ram_name = "ALTSYNCRAM",
		ram_block9a_36.mixed_port_feed_through_mode = "dont_care",
		ram_block9a_36.operation_mode = "dual_port",
		ram_block9a_36.port_a_address_width = 9,
		ram_block9a_36.port_a_data_width = 1,
		ram_block9a_36.port_a_first_address = 0,
		ram_block9a_36.port_a_first_bit_number = 36,
		ram_block9a_36.port_a_last_address = 511,
		ram_block9a_36.port_a_logical_ram_depth = 512,
		ram_block9a_36.port_a_logical_ram_width = 48,
		ram_block9a_36.port_b_address_clear = "clear1",
		ram_block9a_36.port_b_address_clock = "clock1",
		ram_block9a_36.port_b_address_width = 8,
		ram_block9a_36.port_b_data_out_clear = "clear1",
		ram_block9a_36.port_b_data_out_clock = "clock1",
		ram_block9a_36.port_b_data_width = 2,
		ram_block9a_36.port_b_first_address = 0,
		ram_block9a_36.port_b_first_bit_number = 36,
		ram_block9a_36.port_b_last_address = 255,
		ram_block9a_36.port_b_logical_ram_depth = 256,
		ram_block9a_36.port_b_logical_ram_width = 96,
		ram_block9a_36.port_b_read_enable_clock = "clock1",
		ram_block9a_36.ram_block_type = "AUTO",
		ram_block9a_36.lpm_type = "cyclonev_ram_block";
	cyclonev_ram_block   ram_block9a_37
	( 
	.clk0(clock0),
	.clk1(clock1),
	.clr1(aclr1),
	.dftout(),
	.eccstatus(),
	.ena0(wren_a),
	.ena1(clocken1),
	.portaaddr({address_a_wire[8:0]}),
	.portadatain({data_a[37]}),
	.portadataout(),
	.portawe(wren_a),
	.portbaddr({address_b_wire[7:0]}),
	.portbaddrstall(addressstall_b),
	.portbdataout(wire_ram_block9a_37portbdataout[1:0]),
	.portbre(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portare(1'b1),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({2{1'b0}}),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1),
	.nerror(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block9a_37.clk0_core_clock_enable = "ena0",
		ram_block9a_37.clk0_input_clock_enable = "none",
		ram_block9a_37.clk1_core_clock_enable = "none",
		ram_block9a_37.clk1_input_clock_enable = "none",
		ram_block9a_37.clk1_output_clock_enable = "ena1",
		ram_block9a_37.connectivity_checking = "OFF",
		ram_block9a_37.data_interleave_offset_in_bits = 48,
		ram_block9a_37.data_interleave_width_in_bits = 1,
		ram_block9a_37.logical_ram_name = "ALTSYNCRAM",
		ram_block9a_37.mixed_port_feed_through_mode = "dont_care",
		ram_block9a_37.operation_mode = "dual_port",
		ram_block9a_37.port_a_address_width = 9,
		ram_block9a_37.port_a_data_width = 1,
		ram_block9a_37.port_a_first_address = 0,
		ram_block9a_37.port_a_first_bit_number = 37,
		ram_block9a_37.port_a_last_address = 511,
		ram_block9a_37.port_a_logical_ram_depth = 512,
		ram_block9a_37.port_a_logical_ram_width = 48,
		ram_block9a_37.port_b_address_clear = "clear1",
		ram_block9a_37.port_b_address_clock = "clock1",
		ram_block9a_37.port_b_address_width = 8,
		ram_block9a_37.port_b_data_out_clear = "clear1",
		ram_block9a_37.port_b_data_out_clock = "clock1",
		ram_block9a_37.port_b_data_width = 2,
		ram_block9a_37.port_b_first_address = 0,
		ram_block9a_37.port_b_first_bit_number = 37,
		ram_block9a_37.port_b_last_address = 255,
		ram_block9a_37.port_b_logical_ram_depth = 256,
		ram_block9a_37.port_b_logical_ram_width = 96,
		ram_block9a_37.port_b_read_enable_clock = "clock1",
		ram_block9a_37.ram_block_type = "AUTO",
		ram_block9a_37.lpm_type = "cyclonev_ram_block";
	cyclonev_ram_block   ram_block9a_38
	( 
	.clk0(clock0),
	.clk1(clock1),
	.clr1(aclr1),
	.dftout(),
	.eccstatus(),
	.ena0(wren_a),
	.ena1(clocken1),
	.portaaddr({address_a_wire[8:0]}),
	.portadatain({data_a[38]}),
	.portadataout(),
	.portawe(wren_a),
	.portbaddr({address_b_wire[7:0]}),
	.portbaddrstall(addressstall_b),
	.portbdataout(wire_ram_block9a_38portbdataout[1:0]),
	.portbre(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portare(1'b1),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({2{1'b0}}),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1),
	.nerror(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block9a_38.clk0_core_clock_enable = "ena0",
		ram_block9a_38.clk0_input_clock_enable = "none",
		ram_block9a_38.clk1_core_clock_enable = "none",
		ram_block9a_38.clk1_input_clock_enable = "none",
		ram_block9a_38.clk1_output_clock_enable = "ena1",
		ram_block9a_38.connectivity_checking = "OFF",
		ram_block9a_38.data_interleave_offset_in_bits = 48,
		ram_block9a_38.data_interleave_width_in_bits = 1,
		ram_block9a_38.logical_ram_name = "ALTSYNCRAM",
		ram_block9a_38.mixed_port_feed_through_mode = "dont_care",
		ram_block9a_38.operation_mode = "dual_port",
		ram_block9a_38.port_a_address_width = 9,
		ram_block9a_38.port_a_data_width = 1,
		ram_block9a_38.port_a_first_address = 0,
		ram_block9a_38.port_a_first_bit_number = 38,
		ram_block9a_38.port_a_last_address = 511,
		ram_block9a_38.port_a_logical_ram_depth = 512,
		ram_block9a_38.port_a_logical_ram_width = 48,
		ram_block9a_38.port_b_address_clear = "clear1",
		ram_block9a_38.port_b_address_clock = "clock1",
		ram_block9a_38.port_b_address_width = 8,
		ram_block9a_38.port_b_data_out_clear = "clear1",
		ram_block9a_38.port_b_data_out_clock = "clock1",
		ram_block9a_38.port_b_data_width = 2,
		ram_block9a_38.port_b_first_address = 0,
		ram_block9a_38.port_b_first_bit_number = 38,
		ram_block9a_38.port_b_last_address = 255,
		ram_block9a_38.port_b_logical_ram_depth = 256,
		ram_block9a_38.port_b_logical_ram_width = 96,
		ram_block9a_38.port_b_read_enable_clock = "clock1",
		ram_block9a_38.ram_block_type = "AUTO",
		ram_block9a_38.lpm_type = "cyclonev_ram_block";
	cyclonev_ram_block   ram_block9a_39
	( 
	.clk0(clock0),
	.clk1(clock1),
	.clr1(aclr1),
	.dftout(),
	.eccstatus(),
	.ena0(wren_a),
	.ena1(clocken1),
	.portaaddr({address_a_wire[8:0]}),
	.portadatain({data_a[39]}),
	.portadataout(),
	.portawe(wren_a),
	.portbaddr({address_b_wire[7:0]}),
	.portbaddrstall(addressstall_b),
	.portbdataout(wire_ram_block9a_39portbdataout[1:0]),
	.portbre(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portare(1'b1),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({2{1'b0}}),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1),
	.nerror(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block9a_39.clk0_core_clock_enable = "ena0",
		ram_block9a_39.clk0_input_clock_enable = "none",
		ram_block9a_39.clk1_core_clock_enable = "none",
		ram_block9a_39.clk1_input_clock_enable = "none",
		ram_block9a_39.clk1_output_clock_enable = "ena1",
		ram_block9a_39.connectivity_checking = "OFF",
		ram_block9a_39.data_interleave_offset_in_bits = 48,
		ram_block9a_39.data_interleave_width_in_bits = 1,
		ram_block9a_39.logical_ram_name = "ALTSYNCRAM",
		ram_block9a_39.mixed_port_feed_through_mode = "dont_care",
		ram_block9a_39.operation_mode = "dual_port",
		ram_block9a_39.port_a_address_width = 9,
		ram_block9a_39.port_a_data_width = 1,
		ram_block9a_39.port_a_first_address = 0,
		ram_block9a_39.port_a_first_bit_number = 39,
		ram_block9a_39.port_a_last_address = 511,
		ram_block9a_39.port_a_logical_ram_depth = 512,
		ram_block9a_39.port_a_logical_ram_width = 48,
		ram_block9a_39.port_b_address_clear = "clear1",
		ram_block9a_39.port_b_address_clock = "clock1",
		ram_block9a_39.port_b_address_width = 8,
		ram_block9a_39.port_b_data_out_clear = "clear1",
		ram_block9a_39.port_b_data_out_clock = "clock1",
		ram_block9a_39.port_b_data_width = 2,
		ram_block9a_39.port_b_first_address = 0,
		ram_block9a_39.port_b_first_bit_number = 39,
		ram_block9a_39.port_b_last_address = 255,
		ram_block9a_39.port_b_logical_ram_depth = 256,
		ram_block9a_39.port_b_logical_ram_width = 96,
		ram_block9a_39.port_b_read_enable_clock = "clock1",
		ram_block9a_39.ram_block_type = "AUTO",
		ram_block9a_39.lpm_type = "cyclonev_ram_block";
	cyclonev_ram_block   ram_block9a_40
	( 
	.clk0(clock0),
	.clk1(clock1),
	.clr1(aclr1),
	.dftout(),
	.eccstatus(),
	.ena0(wren_a),
	.ena1(clocken1),
	.portaaddr({address_a_wire[8:0]}),
	.portadatain({data_a[40]}),
	.portadataout(),
	.portawe(wren_a),
	.portbaddr({address_b_wire[7:0]}),
	.portbaddrstall(addressstall_b),
	.portbdataout(wire_ram_block9a_40portbdataout[1:0]),
	.portbre(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portare(1'b1),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({2{1'b0}}),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1),
	.nerror(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block9a_40.clk0_core_clock_enable = "ena0",
		ram_block9a_40.clk0_input_clock_enable = "none",
		ram_block9a_40.clk1_core_clock_enable = "none",
		ram_block9a_40.clk1_input_clock_enable = "none",
		ram_block9a_40.clk1_output_clock_enable = "ena1",
		ram_block9a_40.connectivity_checking = "OFF",
		ram_block9a_40.data_interleave_offset_in_bits = 48,
		ram_block9a_40.data_interleave_width_in_bits = 1,
		ram_block9a_40.logical_ram_name = "ALTSYNCRAM",
		ram_block9a_40.mixed_port_feed_through_mode = "dont_care",
		ram_block9a_40.operation_mode = "dual_port",
		ram_block9a_40.port_a_address_width = 9,
		ram_block9a_40.port_a_data_width = 1,
		ram_block9a_40.port_a_first_address = 0,
		ram_block9a_40.port_a_first_bit_number = 40,
		ram_block9a_40.port_a_last_address = 511,
		ram_block9a_40.port_a_logical_ram_depth = 512,
		ram_block9a_40.port_a_logical_ram_width = 48,
		ram_block9a_40.port_b_address_clear = "clear1",
		ram_block9a_40.port_b_address_clock = "clock1",
		ram_block9a_40.port_b_address_width = 8,
		ram_block9a_40.port_b_data_out_clear = "clear1",
		ram_block9a_40.port_b_data_out_clock = "clock1",
		ram_block9a_40.port_b_data_width = 2,
		ram_block9a_40.port_b_first_address = 0,
		ram_block9a_40.port_b_first_bit_number = 40,
		ram_block9a_40.port_b_last_address = 255,
		ram_block9a_40.port_b_logical_ram_depth = 256,
		ram_block9a_40.port_b_logical_ram_width = 96,
		ram_block9a_40.port_b_read_enable_clock = "clock1",
		ram_block9a_40.ram_block_type = "AUTO",
		ram_block9a_40.lpm_type = "cyclonev_ram_block";
	cyclonev_ram_block   ram_block9a_41
	( 
	.clk0(clock0),
	.clk1(clock1),
	.clr1(aclr1),
	.dftout(),
	.eccstatus(),
	.ena0(wren_a),
	.ena1(clocken1),
	.portaaddr({address_a_wire[8:0]}),
	.portadatain({data_a[41]}),
	.portadataout(),
	.portawe(wren_a),
	.portbaddr({address_b_wire[7:0]}),
	.portbaddrstall(addressstall_b),
	.portbdataout(wire_ram_block9a_41portbdataout[1:0]),
	.portbre(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portare(1'b1),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({2{1'b0}}),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1),
	.nerror(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block9a_41.clk0_core_clock_enable = "ena0",
		ram_block9a_41.clk0_input_clock_enable = "none",
		ram_block9a_41.clk1_core_clock_enable = "none",
		ram_block9a_41.clk1_input_clock_enable = "none",
		ram_block9a_41.clk1_output_clock_enable = "ena1",
		ram_block9a_41.connectivity_checking = "OFF",
		ram_block9a_41.data_interleave_offset_in_bits = 48,
		ram_block9a_41.data_interleave_width_in_bits = 1,
		ram_block9a_41.logical_ram_name = "ALTSYNCRAM",
		ram_block9a_41.mixed_port_feed_through_mode = "dont_care",
		ram_block9a_41.operation_mode = "dual_port",
		ram_block9a_41.port_a_address_width = 9,
		ram_block9a_41.port_a_data_width = 1,
		ram_block9a_41.port_a_first_address = 0,
		ram_block9a_41.port_a_first_bit_number = 41,
		ram_block9a_41.port_a_last_address = 511,
		ram_block9a_41.port_a_logical_ram_depth = 512,
		ram_block9a_41.port_a_logical_ram_width = 48,
		ram_block9a_41.port_b_address_clear = "clear1",
		ram_block9a_41.port_b_address_clock = "clock1",
		ram_block9a_41.port_b_address_width = 8,
		ram_block9a_41.port_b_data_out_clear = "clear1",
		ram_block9a_41.port_b_data_out_clock = "clock1",
		ram_block9a_41.port_b_data_width = 2,
		ram_block9a_41.port_b_first_address = 0,
		ram_block9a_41.port_b_first_bit_number = 41,
		ram_block9a_41.port_b_last_address = 255,
		ram_block9a_41.port_b_logical_ram_depth = 256,
		ram_block9a_41.port_b_logical_ram_width = 96,
		ram_block9a_41.port_b_read_enable_clock = "clock1",
		ram_block9a_41.ram_block_type = "AUTO",
		ram_block9a_41.lpm_type = "cyclonev_ram_block";
	cyclonev_ram_block   ram_block9a_42
	( 
	.clk0(clock0),
	.clk1(clock1),
	.clr1(aclr1),
	.dftout(),
	.eccstatus(),
	.ena0(wren_a),
	.ena1(clocken1),
	.portaaddr({address_a_wire[8:0]}),
	.portadatain({data_a[42]}),
	.portadataout(),
	.portawe(wren_a),
	.portbaddr({address_b_wire[7:0]}),
	.portbaddrstall(addressstall_b),
	.portbdataout(wire_ram_block9a_42portbdataout[1:0]),
	.portbre(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portare(1'b1),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({2{1'b0}}),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1),
	.nerror(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block9a_42.clk0_core_clock_enable = "ena0",
		ram_block9a_42.clk0_input_clock_enable = "none",
		ram_block9a_42.clk1_core_clock_enable = "none",
		ram_block9a_42.clk1_input_clock_enable = "none",
		ram_block9a_42.clk1_output_clock_enable = "ena1",
		ram_block9a_42.connectivity_checking = "OFF",
		ram_block9a_42.data_interleave_offset_in_bits = 48,
		ram_block9a_42.data_interleave_width_in_bits = 1,
		ram_block9a_42.logical_ram_name = "ALTSYNCRAM",
		ram_block9a_42.mixed_port_feed_through_mode = "dont_care",
		ram_block9a_42.operation_mode = "dual_port",
		ram_block9a_42.port_a_address_width = 9,
		ram_block9a_42.port_a_data_width = 1,
		ram_block9a_42.port_a_first_address = 0,
		ram_block9a_42.port_a_first_bit_number = 42,
		ram_block9a_42.port_a_last_address = 511,
		ram_block9a_42.port_a_logical_ram_depth = 512,
		ram_block9a_42.port_a_logical_ram_width = 48,
		ram_block9a_42.port_b_address_clear = "clear1",
		ram_block9a_42.port_b_address_clock = "clock1",
		ram_block9a_42.port_b_address_width = 8,
		ram_block9a_42.port_b_data_out_clear = "clear1",
		ram_block9a_42.port_b_data_out_clock = "clock1",
		ram_block9a_42.port_b_data_width = 2,
		ram_block9a_42.port_b_first_address = 0,
		ram_block9a_42.port_b_first_bit_number = 42,
		ram_block9a_42.port_b_last_address = 255,
		ram_block9a_42.port_b_logical_ram_depth = 256,
		ram_block9a_42.port_b_logical_ram_width = 96,
		ram_block9a_42.port_b_read_enable_clock = "clock1",
		ram_block9a_42.ram_block_type = "AUTO",
		ram_block9a_42.lpm_type = "cyclonev_ram_block";
	cyclonev_ram_block   ram_block9a_43
	( 
	.clk0(clock0),
	.clk1(clock1),
	.clr1(aclr1),
	.dftout(),
	.eccstatus(),
	.ena0(wren_a),
	.ena1(clocken1),
	.portaaddr({address_a_wire[8:0]}),
	.portadatain({data_a[43]}),
	.portadataout(),
	.portawe(wren_a),
	.portbaddr({address_b_wire[7:0]}),
	.portbaddrstall(addressstall_b),
	.portbdataout(wire_ram_block9a_43portbdataout[1:0]),
	.portbre(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portare(1'b1),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({2{1'b0}}),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1),
	.nerror(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block9a_43.clk0_core_clock_enable = "ena0",
		ram_block9a_43.clk0_input_clock_enable = "none",
		ram_block9a_43.clk1_core_clock_enable = "none",
		ram_block9a_43.clk1_input_clock_enable = "none",
		ram_block9a_43.clk1_output_clock_enable = "ena1",
		ram_block9a_43.connectivity_checking = "OFF",
		ram_block9a_43.data_interleave_offset_in_bits = 48,
		ram_block9a_43.data_interleave_width_in_bits = 1,
		ram_block9a_43.logical_ram_name = "ALTSYNCRAM",
		ram_block9a_43.mixed_port_feed_through_mode = "dont_care",
		ram_block9a_43.operation_mode = "dual_port",
		ram_block9a_43.port_a_address_width = 9,
		ram_block9a_43.port_a_data_width = 1,
		ram_block9a_43.port_a_first_address = 0,
		ram_block9a_43.port_a_first_bit_number = 43,
		ram_block9a_43.port_a_last_address = 511,
		ram_block9a_43.port_a_logical_ram_depth = 512,
		ram_block9a_43.port_a_logical_ram_width = 48,
		ram_block9a_43.port_b_address_clear = "clear1",
		ram_block9a_43.port_b_address_clock = "clock1",
		ram_block9a_43.port_b_address_width = 8,
		ram_block9a_43.port_b_data_out_clear = "clear1",
		ram_block9a_43.port_b_data_out_clock = "clock1",
		ram_block9a_43.port_b_data_width = 2,
		ram_block9a_43.port_b_first_address = 0,
		ram_block9a_43.port_b_first_bit_number = 43,
		ram_block9a_43.port_b_last_address = 255,
		ram_block9a_43.port_b_logical_ram_depth = 256,
		ram_block9a_43.port_b_logical_ram_width = 96,
		ram_block9a_43.port_b_read_enable_clock = "clock1",
		ram_block9a_43.ram_block_type = "AUTO",
		ram_block9a_43.lpm_type = "cyclonev_ram_block";
	cyclonev_ram_block   ram_block9a_44
	( 
	.clk0(clock0),
	.clk1(clock1),
	.clr1(aclr1),
	.dftout(),
	.eccstatus(),
	.ena0(wren_a),
	.ena1(clocken1),
	.portaaddr({address_a_wire[8:0]}),
	.portadatain({data_a[44]}),
	.portadataout(),
	.portawe(wren_a),
	.portbaddr({address_b_wire[7:0]}),
	.portbaddrstall(addressstall_b),
	.portbdataout(wire_ram_block9a_44portbdataout[1:0]),
	.portbre(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portare(1'b1),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({2{1'b0}}),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1),
	.nerror(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block9a_44.clk0_core_clock_enable = "ena0",
		ram_block9a_44.clk0_input_clock_enable = "none",
		ram_block9a_44.clk1_core_clock_enable = "none",
		ram_block9a_44.clk1_input_clock_enable = "none",
		ram_block9a_44.clk1_output_clock_enable = "ena1",
		ram_block9a_44.connectivity_checking = "OFF",
		ram_block9a_44.data_interleave_offset_in_bits = 48,
		ram_block9a_44.data_interleave_width_in_bits = 1,
		ram_block9a_44.logical_ram_name = "ALTSYNCRAM",
		ram_block9a_44.mixed_port_feed_through_mode = "dont_care",
		ram_block9a_44.operation_mode = "dual_port",
		ram_block9a_44.port_a_address_width = 9,
		ram_block9a_44.port_a_data_width = 1,
		ram_block9a_44.port_a_first_address = 0,
		ram_block9a_44.port_a_first_bit_number = 44,
		ram_block9a_44.port_a_last_address = 511,
		ram_block9a_44.port_a_logical_ram_depth = 512,
		ram_block9a_44.port_a_logical_ram_width = 48,
		ram_block9a_44.port_b_address_clear = "clear1",
		ram_block9a_44.port_b_address_clock = "clock1",
		ram_block9a_44.port_b_address_width = 8,
		ram_block9a_44.port_b_data_out_clear = "clear1",
		ram_block9a_44.port_b_data_out_clock = "clock1",
		ram_block9a_44.port_b_data_width = 2,
		ram_block9a_44.port_b_first_address = 0,
		ram_block9a_44.port_b_first_bit_number = 44,
		ram_block9a_44.port_b_last_address = 255,
		ram_block9a_44.port_b_logical_ram_depth = 256,
		ram_block9a_44.port_b_logical_ram_width = 96,
		ram_block9a_44.port_b_read_enable_clock = "clock1",
		ram_block9a_44.ram_block_type = "AUTO",
		ram_block9a_44.lpm_type = "cyclonev_ram_block";
	cyclonev_ram_block   ram_block9a_45
	( 
	.clk0(clock0),
	.clk1(clock1),
	.clr1(aclr1),
	.dftout(),
	.eccstatus(),
	.ena0(wren_a),
	.ena1(clocken1),
	.portaaddr({address_a_wire[8:0]}),
	.portadatain({data_a[45]}),
	.portadataout(),
	.portawe(wren_a),
	.portbaddr({address_b_wire[7:0]}),
	.portbaddrstall(addressstall_b),
	.portbdataout(wire_ram_block9a_45portbdataout[1:0]),
	.portbre(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portare(1'b1),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({2{1'b0}}),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1),
	.nerror(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block9a_45.clk0_core_clock_enable = "ena0",
		ram_block9a_45.clk0_input_clock_enable = "none",
		ram_block9a_45.clk1_core_clock_enable = "none",
		ram_block9a_45.clk1_input_clock_enable = "none",
		ram_block9a_45.clk1_output_clock_enable = "ena1",
		ram_block9a_45.connectivity_checking = "OFF",
		ram_block9a_45.data_interleave_offset_in_bits = 48,
		ram_block9a_45.data_interleave_width_in_bits = 1,
		ram_block9a_45.logical_ram_name = "ALTSYNCRAM",
		ram_block9a_45.mixed_port_feed_through_mode = "dont_care",
		ram_block9a_45.operation_mode = "dual_port",
		ram_block9a_45.port_a_address_width = 9,
		ram_block9a_45.port_a_data_width = 1,
		ram_block9a_45.port_a_first_address = 0,
		ram_block9a_45.port_a_first_bit_number = 45,
		ram_block9a_45.port_a_last_address = 511,
		ram_block9a_45.port_a_logical_ram_depth = 512,
		ram_block9a_45.port_a_logical_ram_width = 48,
		ram_block9a_45.port_b_address_clear = "clear1",
		ram_block9a_45.port_b_address_clock = "clock1",
		ram_block9a_45.port_b_address_width = 8,
		ram_block9a_45.port_b_data_out_clear = "clear1",
		ram_block9a_45.port_b_data_out_clock = "clock1",
		ram_block9a_45.port_b_data_width = 2,
		ram_block9a_45.port_b_first_address = 0,
		ram_block9a_45.port_b_first_bit_number = 45,
		ram_block9a_45.port_b_last_address = 255,
		ram_block9a_45.port_b_logical_ram_depth = 256,
		ram_block9a_45.port_b_logical_ram_width = 96,
		ram_block9a_45.port_b_read_enable_clock = "clock1",
		ram_block9a_45.ram_block_type = "AUTO",
		ram_block9a_45.lpm_type = "cyclonev_ram_block";
	cyclonev_ram_block   ram_block9a_46
	( 
	.clk0(clock0),
	.clk1(clock1),
	.clr1(aclr1),
	.dftout(),
	.eccstatus(),
	.ena0(wren_a),
	.ena1(clocken1),
	.portaaddr({address_a_wire[8:0]}),
	.portadatain({data_a[46]}),
	.portadataout(),
	.portawe(wren_a),
	.portbaddr({address_b_wire[7:0]}),
	.portbaddrstall(addressstall_b),
	.portbdataout(wire_ram_block9a_46portbdataout[1:0]),
	.portbre(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portare(1'b1),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({2{1'b0}}),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1),
	.nerror(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block9a_46.clk0_core_clock_enable = "ena0",
		ram_block9a_46.clk0_input_clock_enable = "none",
		ram_block9a_46.clk1_core_clock_enable = "none",
		ram_block9a_46.clk1_input_clock_enable = "none",
		ram_block9a_46.clk1_output_clock_enable = "ena1",
		ram_block9a_46.connectivity_checking = "OFF",
		ram_block9a_46.data_interleave_offset_in_bits = 48,
		ram_block9a_46.data_interleave_width_in_bits = 1,
		ram_block9a_46.logical_ram_name = "ALTSYNCRAM",
		ram_block9a_46.mixed_port_feed_through_mode = "dont_care",
		ram_block9a_46.operation_mode = "dual_port",
		ram_block9a_46.port_a_address_width = 9,
		ram_block9a_46.port_a_data_width = 1,
		ram_block9a_46.port_a_first_address = 0,
		ram_block9a_46.port_a_first_bit_number = 46,
		ram_block9a_46.port_a_last_address = 511,
		ram_block9a_46.port_a_logical_ram_depth = 512,
		ram_block9a_46.port_a_logical_ram_width = 48,
		ram_block9a_46.port_b_address_clear = "clear1",
		ram_block9a_46.port_b_address_clock = "clock1",
		ram_block9a_46.port_b_address_width = 8,
		ram_block9a_46.port_b_data_out_clear = "clear1",
		ram_block9a_46.port_b_data_out_clock = "clock1",
		ram_block9a_46.port_b_data_width = 2,
		ram_block9a_46.port_b_first_address = 0,
		ram_block9a_46.port_b_first_bit_number = 46,
		ram_block9a_46.port_b_last_address = 255,
		ram_block9a_46.port_b_logical_ram_depth = 256,
		ram_block9a_46.port_b_logical_ram_width = 96,
		ram_block9a_46.port_b_read_enable_clock = "clock1",
		ram_block9a_46.ram_block_type = "AUTO",
		ram_block9a_46.lpm_type = "cyclonev_ram_block";
	cyclonev_ram_block   ram_block9a_47
	( 
	.clk0(clock0),
	.clk1(clock1),
	.clr1(aclr1),
	.dftout(),
	.eccstatus(),
	.ena0(wren_a),
	.ena1(clocken1),
	.portaaddr({address_a_wire[8:0]}),
	.portadatain({data_a[47]}),
	.portadataout(),
	.portawe(wren_a),
	.portbaddr({address_b_wire[7:0]}),
	.portbaddrstall(addressstall_b),
	.portbdataout(wire_ram_block9a_47portbdataout[1:0]),
	.portbre(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portare(1'b1),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({2{1'b0}}),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1),
	.nerror(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block9a_47.clk0_core_clock_enable = "ena0",
		ram_block9a_47.clk0_input_clock_enable = "none",
		ram_block9a_47.clk1_core_clock_enable = "none",
		ram_block9a_47.clk1_input_clock_enable = "none",
		ram_block9a_47.clk1_output_clock_enable = "ena1",
		ram_block9a_47.connectivity_checking = "OFF",
		ram_block9a_47.data_interleave_offset_in_bits = 48,
		ram_block9a_47.data_interleave_width_in_bits = 1,
		ram_block9a_47.logical_ram_name = "ALTSYNCRAM",
		ram_block9a_47.mixed_port_feed_through_mode = "dont_care",
		ram_block9a_47.operation_mode = "dual_port",
		ram_block9a_47.port_a_address_width = 9,
		ram_block9a_47.port_a_data_width = 1,
		ram_block9a_47.port_a_first_address = 0,
		ram_block9a_47.port_a_first_bit_number = 47,
		ram_block9a_47.port_a_last_address = 511,
		ram_block9a_47.port_a_logical_ram_depth = 512,
		ram_block9a_47.port_a_logical_ram_width = 48,
		ram_block9a_47.port_b_address_clear = "clear1",
		ram_block9a_47.port_b_address_clock = "clock1",
		ram_block9a_47.port_b_address_width = 8,
		ram_block9a_47.port_b_data_out_clear = "clear1",
		ram_block9a_47.port_b_data_out_clock = "clock1",
		ram_block9a_47.port_b_data_width = 2,
		ram_block9a_47.port_b_first_address = 0,
		ram_block9a_47.port_b_first_bit_number = 47,
		ram_block9a_47.port_b_last_address = 255,
		ram_block9a_47.port_b_logical_ram_depth = 256,
		ram_block9a_47.port_b_logical_ram_width = 96,
		ram_block9a_47.port_b_read_enable_clock = "clock1",
		ram_block9a_47.ram_block_type = "AUTO",
		ram_block9a_47.lpm_type = "cyclonev_ram_block";
	assign
		address_a_wire = address_a,
		address_b_wire = address_b,
		q_b = {wire_ram_block9a_47portbdataout[1], wire_ram_block9a_46portbdataout[1], wire_ram_block9a_45portbdataout[1], wire_ram_block9a_44portbdataout[1], wire_ram_block9a_43portbdataout[1], wire_ram_block9a_42portbdataout[1], wire_ram_block9a_41portbdataout[1], wire_ram_block9a_40portbdataout[1], wire_ram_block9a_39portbdataout[1], wire_ram_block9a_38portbdataout[1], wire_ram_block9a_37portbdataout[1], wire_ram_block9a_36portbdataout[1], wire_ram_block9a_35portbdataout[1], wire_ram_block9a_34portbdataout[1], wire_ram_block9a_33portbdataout[1], wire_ram_block9a_32portbdataout[1], wire_ram_block9a_31portbdataout[1], wire_ram_block9a_30portbdataout[1], wire_ram_block9a_29portbdataout[1], wire_ram_block9a_28portbdataout[1], wire_ram_block9a_27portbdataout[1], wire_ram_block9a_26portbdataout[1], wire_ram_block9a_25portbdataout[1], wire_ram_block9a_24portbdataout[1], wire_ram_block9a_23portbdataout[1], wire_ram_block9a_22portbdataout[1], wire_ram_block9a_21portbdataout[1], wire_ram_block9a_20portbdataout[1], wire_ram_block9a_19portbdataout[1], wire_ram_block9a_18portbdataout[1], wire_ram_block9a_17portbdataout[1], wire_ram_block9a_16portbdataout[1], wire_ram_block9a_15portbdataout[1], wire_ram_block9a_14portbdataout[1], wire_ram_block9a_13portbdataout[1], wire_ram_block9a_12portbdataout[1], wire_ram_block9a_11portbdataout[1], wire_ram_block9a_10portbdataout[1], wire_ram_block9a_9portbdataout[1], wire_ram_block9a_8portbdataout[1], wire_ram_block9a_7portbdataout[1], wire_ram_block9a_6portbdataout[1], wire_ram_block9a_5portbdataout[1], wire_ram_block9a_4portbdataout[1], wire_ram_block9a_3portbdataout[1], wire_ram_block9a_2portbdataout[1], wire_ram_block9a_1portbdataout[1], wire_ram_block9a_0portbdataout[1], wire_ram_block9a_47portbdataout[0], wire_ram_block9a_46portbdataout[0], wire_ram_block9a_45portbdataout[0], wire_ram_block9a_44portbdataout[0], wire_ram_block9a_43portbdataout[0], wire_ram_block9a_42portbdataout[0], wire_ram_block9a_41portbdataout[0], wire_ram_block9a_40portbdataout[0], wire_ram_block9a_39portbdataout[0]
, wire_ram_block9a_38portbdataout[0], wire_ram_block9a_37portbdataout[0], wire_ram_block9a_36portbdataout[0], wire_ram_block9a_35portbdataout[0], wire_ram_block9a_34portbdataout[0], wire_ram_block9a_33portbdataout[0], wire_ram_block9a_32portbdataout[0], wire_ram_block9a_31portbdataout[0], wire_ram_block9a_30portbdataout[0], wire_ram_block9a_29portbdataout[0], wire_ram_block9a_28portbdataout[0], wire_ram_block9a_27portbdataout[0], wire_ram_block9a_26portbdataout[0], wire_ram_block9a_25portbdataout[0], wire_ram_block9a_24portbdataout[0], wire_ram_block9a_23portbdataout[0], wire_ram_block9a_22portbdataout[0], wire_ram_block9a_21portbdataout[0], wire_ram_block9a_20portbdataout[0], wire_ram_block9a_19portbdataout[0], wire_ram_block9a_18portbdataout[0], wire_ram_block9a_17portbdataout[0], wire_ram_block9a_16portbdataout[0], wire_ram_block9a_15portbdataout[0], wire_ram_block9a_14portbdataout[0], wire_ram_block9a_13portbdataout[0], wire_ram_block9a_12portbdataout[0], wire_ram_block9a_11portbdataout[0], wire_ram_block9a_10portbdataout[0], wire_ram_block9a_9portbdataout[0], wire_ram_block9a_8portbdataout[0], wire_ram_block9a_7portbdataout[0], wire_ram_block9a_6portbdataout[0], wire_ram_block9a_5portbdataout[0], wire_ram_block9a_4portbdataout[0], wire_ram_block9a_3portbdataout[0], wire_ram_block9a_2portbdataout[0], wire_ram_block9a_1portbdataout[0], wire_ram_block9a_0portbdataout[0]};
endmodule //squeeze_fifo_altsyncram


//dffpipe DELAY=2 WIDTH=1 clock clrn d q ALTERA_INTERNAL_OPTIONS=AUTO_SHIFT_REGISTER_RECOGNITION=OFF;suppress_da_rule_internal=S102
//VERSION_BEGIN 17.1 cbx_mgl 2017:10:19:06:38:12:SJ cbx_stratixii 2017:10:19:05:46:40:SJ cbx_util_mgl 2017:10:19:05:46:40:SJ  VERSION_END

//synthesis_resources = reg 2 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
(* ALTERA_ATTRIBUTE = {"AUTO_SHIFT_REGISTER_RECOGNITION=OFF;suppress_da_rule_internal=S102"} *)
module  squeeze_fifo_dffpipe
	( 
	clock,
	clrn,
	d,
	q) /* synthesis synthesis_clearbox=1 */;
	input   clock;
	input   clrn;
	input   [0:0]  d;
	output   [0:0]  q;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_off
`endif
	tri0   clock;
	tri1   clrn;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_on
`endif

	reg	[0:0]	dffe10a;
	reg	[0:0]	dffe11a;
	wire ena;
	wire prn;
	wire sclr;

	// synopsys translate_off
	initial
		dffe10a = 0;
	// synopsys translate_on
	always @ ( posedge clock or  negedge prn or  negedge clrn)
		if (prn == 1'b0) dffe10a <= {1{1'b1}};
		else if (clrn == 1'b0) dffe10a <= 1'b0;
		else if  (ena == 1'b1)   dffe10a <= (d & (~ sclr));
	// synopsys translate_off
	initial
		dffe11a = 0;
	// synopsys translate_on
	always @ ( posedge clock or  negedge prn or  negedge clrn)
		if (prn == 1'b0) dffe11a <= {1{1'b1}};
		else if (clrn == 1'b0) dffe11a <= 1'b0;
		else if  (ena == 1'b1)   dffe11a <= (dffe10a & (~ sclr));
	assign
		ena = 1'b1,
		prn = 1'b1,
		q = dffe11a,
		sclr = 1'b0;
endmodule //squeeze_fifo_dffpipe


//dffpipe DELAY=1 WIDTH=9 clock clrn d ALTERA_INTERNAL_OPTIONS=X_ON_VIOLATION_OPTION=OFF
//VERSION_BEGIN 17.1 cbx_a_gray2bin 2017:10:19:05:46:40:SJ cbx_a_graycounter 2017:10:19:05:46:40:SJ cbx_altdpram 2017:10:19:05:46:40:SJ cbx_altera_counter 2017:10:19:05:46:40:SJ cbx_altera_gray_counter 2017:10:19:05:46:40:SJ cbx_altera_syncram 2017:10:19:05:46:40:SJ cbx_altera_syncram_nd_impl 2017:10:19:05:46:40:SJ cbx_altsyncram 2017:10:19:05:46:40:SJ cbx_cycloneii 2017:10:19:05:46:40:SJ cbx_dcfifo 2017:10:19:05:46:40:SJ cbx_fifo_common 2017:10:19:05:46:40:SJ cbx_lpm_add_sub 2017:10:19:05:46:40:SJ cbx_lpm_compare 2017:10:19:05:46:40:SJ cbx_lpm_counter 2017:10:19:05:46:40:SJ cbx_lpm_decode 2017:10:19:05:46:40:SJ cbx_lpm_mux 2017:10:19:05:46:40:SJ cbx_mgl 2017:10:19:06:38:12:SJ cbx_nadder 2017:10:19:05:46:40:SJ cbx_scfifo 2017:10:19:05:46:40:SJ cbx_stratix 2017:10:19:05:46:40:SJ cbx_stratixii 2017:10:19:05:46:40:SJ cbx_stratixiii 2017:10:19:05:46:40:SJ cbx_stratixv 2017:10:19:05:46:40:SJ cbx_util_mgl 2017:10:19:05:46:40:SJ  VERSION_END


//dffpipe DELAY=1 WIDTH=9 clock clrn d q ALTERA_INTERNAL_OPTIONS=AUTO_SHIFT_REGISTER_RECOGNITION=OFF
//VERSION_BEGIN 17.1 cbx_mgl 2017:10:19:06:38:12:SJ cbx_stratixii 2017:10:19:05:46:40:SJ cbx_util_mgl 2017:10:19:05:46:40:SJ  VERSION_END

//synthesis_resources = reg 9 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
(* ALTERA_ATTRIBUTE = {"AUTO_SHIFT_REGISTER_RECOGNITION=OFF"} *)
module  squeeze_fifo_dffpipe1
	( 
	clock,
	clrn,
	d,
	q) /* synthesis synthesis_clearbox=1 */;
	input   clock;
	input   clrn;
	input   [8:0]  d;
	output   [8:0]  q;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_off
`endif
	tri0   clock;
	tri1   clrn;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_on
`endif

	reg	[8:0]	dffe13a;
	wire ena;
	wire prn;
	wire sclr;

	// synopsys translate_off
	initial
		dffe13a = 0;
	// synopsys translate_on
	always @ ( posedge clock or  negedge prn or  negedge clrn)
		if (prn == 1'b0) dffe13a <= {9{1'b1}};
		else if (clrn == 1'b0) dffe13a <= 9'b0;
		else if  (ena == 1'b1)   dffe13a <= (d & {9{(~ sclr)}});
	assign
		ena = 1'b1,
		prn = 1'b1,
		q = dffe13a,
		sclr = 1'b0;
endmodule //squeeze_fifo_dffpipe1

//synthesis_resources = reg 9 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
(* ALTERA_ATTRIBUTE = {"X_ON_VIOLATION_OPTION=OFF"} *)
module  squeeze_fifo_alt_synch_pipe
	( 
	clock,
	clrn,
	d,
	q) /* synthesis synthesis_clearbox=1 */;
	input   clock;
	input   clrn;
	input   [8:0]  d;
	output   [8:0]  q;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_off
`endif
	tri1   clrn;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_on
`endif

	wire  [8:0]   wire_dffpipe12_q;

	squeeze_fifo_dffpipe1   dffpipe12
	( 
	.clock(clock),
	.clrn(clrn),
	.d(d),
	.q(wire_dffpipe12_q));
	assign
		q = wire_dffpipe12_q;
endmodule //squeeze_fifo_alt_synch_pipe


//dffpipe DELAY=1 WIDTH=10 clock clrn d q ALTERA_INTERNAL_OPTIONS=AUTO_SHIFT_REGISTER_RECOGNITION=OFF
//VERSION_BEGIN 17.1 cbx_mgl 2017:10:19:06:38:12:SJ cbx_stratixii 2017:10:19:05:46:40:SJ cbx_util_mgl 2017:10:19:05:46:40:SJ  VERSION_END

//synthesis_resources = reg 10 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
(* ALTERA_ATTRIBUTE = {"AUTO_SHIFT_REGISTER_RECOGNITION=OFF"} *)
module  squeeze_fifo_dffpipe12
	( 
	clock,
	clrn,
	d,
	q) /* synthesis synthesis_clearbox=1 */;
	input   clock;
	input   clrn;
	input   [9:0]  d;
	output   [9:0]  q;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_off
`endif
	tri0   clock;
	tri1   clrn;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_on
`endif

	reg	[9:0]	dffe14a;
	wire ena;
	wire prn;
	wire sclr;

	// synopsys translate_off
	initial
		dffe14a = 0;
	// synopsys translate_on
	always @ ( posedge clock or  negedge prn or  negedge clrn)
		if (prn == 1'b0) dffe14a <= {10{1'b1}};
		else if (clrn == 1'b0) dffe14a <= 10'b0;
		else if  (ena == 1'b1)   dffe14a <= (d & {10{(~ sclr)}});
	assign
		ena = 1'b1,
		prn = 1'b1,
		q = dffe14a,
		sclr = 1'b0;
endmodule //squeeze_fifo_dffpipe12


//dffpipe DELAY=1 WIDTH=9 clock clrn d q ALTERA_INTERNAL_OPTIONS=X_ON_VIOLATION_OPTION=OFF
//VERSION_BEGIN 17.1 cbx_a_gray2bin 2017:10:19:05:46:40:SJ cbx_a_graycounter 2017:10:19:05:46:40:SJ cbx_altdpram 2017:10:19:05:46:40:SJ cbx_altera_counter 2017:10:19:05:46:40:SJ cbx_altera_gray_counter 2017:10:19:05:46:40:SJ cbx_altera_syncram 2017:10:19:05:46:40:SJ cbx_altera_syncram_nd_impl 2017:10:19:05:46:40:SJ cbx_altsyncram 2017:10:19:05:46:40:SJ cbx_cycloneii 2017:10:19:05:46:40:SJ cbx_dcfifo 2017:10:19:05:46:40:SJ cbx_fifo_common 2017:10:19:05:46:40:SJ cbx_lpm_add_sub 2017:10:19:05:46:40:SJ cbx_lpm_compare 2017:10:19:05:46:40:SJ cbx_lpm_counter 2017:10:19:05:46:40:SJ cbx_lpm_decode 2017:10:19:05:46:40:SJ cbx_lpm_mux 2017:10:19:05:46:40:SJ cbx_mgl 2017:10:19:06:38:12:SJ cbx_nadder 2017:10:19:05:46:40:SJ cbx_scfifo 2017:10:19:05:46:40:SJ cbx_stratix 2017:10:19:05:46:40:SJ cbx_stratixii 2017:10:19:05:46:40:SJ cbx_stratixiii 2017:10:19:05:46:40:SJ cbx_stratixv 2017:10:19:05:46:40:SJ cbx_util_mgl 2017:10:19:05:46:40:SJ  VERSION_END


//dffpipe DELAY=1 WIDTH=9 clock clrn d q ALTERA_INTERNAL_OPTIONS=AUTO_SHIFT_REGISTER_RECOGNITION=OFF
//VERSION_BEGIN 17.1 cbx_mgl 2017:10:19:06:38:12:SJ cbx_stratixii 2017:10:19:05:46:40:SJ cbx_util_mgl 2017:10:19:05:46:40:SJ  VERSION_END

//synthesis_resources = reg 9 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
(* ALTERA_ATTRIBUTE = {"AUTO_SHIFT_REGISTER_RECOGNITION=OFF"} *)
module  squeeze_fifo_dffpipe123
	( 
	clock,
	clrn,
	d,
	q) /* synthesis synthesis_clearbox=1 */;
	input   clock;
	input   clrn;
	input   [8:0]  d;
	output   [8:0]  q;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_off
`endif
	tri0   clock;
	tri1   clrn;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_on
`endif

	reg	[8:0]	dffe16a;
	wire ena;
	wire prn;
	wire sclr;

	// synopsys translate_off
	initial
		dffe16a = 0;
	// synopsys translate_on
	always @ ( posedge clock or  negedge prn or  negedge clrn)
		if (prn == 1'b0) dffe16a <= {9{1'b1}};
		else if (clrn == 1'b0) dffe16a <= 9'b0;
		else if  (ena == 1'b1)   dffe16a <= (d & {9{(~ sclr)}});
	assign
		ena = 1'b1,
		prn = 1'b1,
		q = dffe16a,
		sclr = 1'b0;
endmodule //squeeze_fifo_dffpipe123

//synthesis_resources = reg 9 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
(* ALTERA_ATTRIBUTE = {"X_ON_VIOLATION_OPTION=OFF"} *)
module  squeeze_fifo_alt_synch_pipe1
	( 
	clock,
	clrn,
	d,
	q) /* synthesis synthesis_clearbox=1 */;
	input   clock;
	input   clrn;
	input   [8:0]  d;
	output   [8:0]  q;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_off
`endif
	tri1   clrn;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_on
`endif

	wire  [8:0]   wire_dffpipe15_q;

	squeeze_fifo_dffpipe123   dffpipe15
	( 
	.clock(clock),
	.clrn(clrn),
	.d(d),
	.q(wire_dffpipe15_q));
	assign
		q = wire_dffpipe15_q;
endmodule //squeeze_fifo_alt_synch_pipe1


//lpm_add_sub DEVICE_FAMILY="Cyclone V" LPM_DIRECTION="SUB" LPM_WIDTH=10 dataa datab result
//VERSION_BEGIN 17.1 cbx_cycloneii 2017:10:19:05:46:40:SJ cbx_lpm_add_sub 2017:10:19:05:46:40:SJ cbx_mgl 2017:10:19:06:38:12:SJ cbx_nadder 2017:10:19:05:46:40:SJ cbx_stratix 2017:10:19:05:46:40:SJ cbx_stratixii 2017:10:19:05:46:40:SJ  VERSION_END


//lpm_compare DEVICE_FAMILY="Cyclone V" LPM_WIDTH=5 aeb dataa datab
//VERSION_BEGIN 17.1 cbx_cycloneii 2017:10:19:05:46:40:SJ cbx_lpm_add_sub 2017:10:19:05:46:40:SJ cbx_lpm_compare 2017:10:19:05:46:40:SJ cbx_mgl 2017:10:19:06:38:12:SJ cbx_nadder 2017:10:19:05:46:40:SJ cbx_stratix 2017:10:19:05:46:40:SJ cbx_stratixii 2017:10:19:05:46:40:SJ  VERSION_END

//synthesis_resources = 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
module  squeeze_fifo_cmpr
	( 
	aeb,
	dataa,
	datab) /* synthesis synthesis_clearbox=1 */;
	output   aeb;
	input   [4:0]  dataa;
	input   [4:0]  datab;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_off
`endif
	tri0   [4:0]  dataa;
	tri0   [4:0]  datab;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_on
`endif

	wire  [0:0]  aeb_result_wire;
	wire  [0:0]  aneb_result_wire;
	wire  [12:0]  data_wire;
	wire  eq_wire;

	assign
		aeb = eq_wire,
		aeb_result_wire = (~ aneb_result_wire),
		aneb_result_wire = ((data_wire[0] | data_wire[1]) | data_wire[2]),
		data_wire = {datab[4], dataa[4], datab[3], dataa[3], datab[2], dataa[2], datab[1], dataa[1], datab[0], dataa[0], (data_wire[11] ^ data_wire[12]), ((data_wire[7] ^ data_wire[8]) | (data_wire[9] ^ data_wire[10])), ((data_wire[3] ^ data_wire[4]) | (data_wire[5] ^ data_wire[6]))},
		eq_wire = aeb_result_wire;
endmodule //squeeze_fifo_cmpr


//lpm_compare DEVICE_FAMILY="Cyclone V" LPM_WIDTH=4 aeb dataa datab
//VERSION_BEGIN 17.1 cbx_cycloneii 2017:10:19:05:46:40:SJ cbx_lpm_add_sub 2017:10:19:05:46:40:SJ cbx_lpm_compare 2017:10:19:05:46:40:SJ cbx_mgl 2017:10:19:06:38:12:SJ cbx_nadder 2017:10:19:05:46:40:SJ cbx_stratix 2017:10:19:05:46:40:SJ cbx_stratixii 2017:10:19:05:46:40:SJ  VERSION_END

//synthesis_resources = 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
module  squeeze_fifo_cmpr1
	( 
	aeb,
	dataa,
	datab) /* synthesis synthesis_clearbox=1 */;
	output   aeb;
	input   [3:0]  dataa;
	input   [3:0]  datab;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_off
`endif
	tri0   [3:0]  dataa;
	tri0   [3:0]  datab;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_on
`endif

	wire  [0:0]  aeb_result_wire;
	wire  [0:0]  aneb_result_wire;
	wire  [9:0]  data_wire;
	wire  eq_wire;

	assign
		aeb = eq_wire,
		aeb_result_wire = (~ aneb_result_wire),
		aneb_result_wire = (data_wire[0] | data_wire[1]),
		data_wire = {datab[3], dataa[3], datab[2], dataa[2], datab[1], dataa[1], datab[0], dataa[0], ((data_wire[6] ^ data_wire[7]) | (data_wire[8] ^ data_wire[9])), ((data_wire[2] ^ data_wire[3]) | (data_wire[4] ^ data_wire[5]))},
		eq_wire = aeb_result_wire;
endmodule //squeeze_fifo_cmpr1


//lpm_counter DEVICE_FAMILY="Cyclone V" lpm_avalue=1 lpm_direction="UP" lpm_port_updown="PORT_UNUSED" lpm_pvalue=1 lpm_width=1 aset clock cnt_en cout q
//VERSION_BEGIN 17.1 cbx_cycloneii 2017:10:19:05:46:40:SJ cbx_lpm_add_sub 2017:10:19:05:46:40:SJ cbx_lpm_compare 2017:10:19:05:46:40:SJ cbx_lpm_counter 2017:10:19:05:46:40:SJ cbx_lpm_decode 2017:10:19:05:46:40:SJ cbx_mgl 2017:10:19:06:38:12:SJ cbx_nadder 2017:10:19:05:46:40:SJ cbx_stratix 2017:10:19:05:46:40:SJ cbx_stratixii 2017:10:19:05:46:40:SJ  VERSION_END

//synthesis_resources = lut 1 reg 1 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
(* ALTERA_ATTRIBUTE = {"{-to counter_reg_bit[0]} POWER_UP_LEVEL=HIGH"} *)
module  squeeze_fifo_cntr
	( 
	aset,
	clock,
	cnt_en,
	cout,
	q) /* synthesis synthesis_clearbox=1 */;
	input   aset;
	input   clock;
	input   cnt_en;
	output   cout;
	output   [0:0]  q;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_off
`endif
	tri0   aset;
	tri1   cnt_en;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_on
`endif

	wire	[0:0]	wire_counter_reg_bit_d;
	wire	[0:0]	wire_counter_reg_bit_asdata;
	reg	[0:0]	counter_reg_bit;
	wire	[0:0]	wire_counter_reg_bit_ena;
	wire	[0:0]	wire_counter_reg_bit_sload;
	wire  [0:0]   wire_counter_comb_bita_0cout;
	wire  [0:0]   wire_counter_comb_bita_0sumout;
	wire clk_en;
	wire  cout_actual;
	wire [0:0]  data;
	wire  external_cin;
	wire  lsb_cin;
	wire  [0:0]  s_val;
	wire  [0:0]  safe_q;
	wire sclr;
	wire sload;
	wire sset;
	wire  time_to_clear;
	wire  updown_dir;
	wire  updown_lsb;
	wire  updown_other_bits;

	// synopsys translate_off
	initial
		counter_reg_bit[0:0] = {1{1'b1}};
	// synopsys translate_on
	always @ ( posedge clock or  posedge aset)
		if (aset == 1'b1) counter_reg_bit[0:0] <= {1{1'b1}};
		else if  (wire_counter_reg_bit_ena[0:0] == 1'b1) 
			if (sclr == 1'b1) counter_reg_bit[0:0] <= 1'b0;
			else if (wire_counter_reg_bit_sload[0:0] == 1'b1) counter_reg_bit[0:0] <= wire_counter_reg_bit_asdata[0:0];
			else  counter_reg_bit[0:0] <= wire_counter_reg_bit_d[0:0];
	assign
		wire_counter_reg_bit_ena = (clk_en & (((cnt_en | sclr) | sset) | sload)),
		wire_counter_reg_bit_sload = (sset | sload),
		wire_counter_reg_bit_asdata = ((sset & s_val) | ((~ sset) & data)),
		wire_counter_reg_bit_d = {wire_counter_comb_bita_0sumout};
	cyclonev_lcell_comb   counter_comb_bita_0
	( 
	.cin(lsb_cin),
	.combout(),
	.cout(wire_counter_comb_bita_0cout[0:0]),
	.datad(counter_reg_bit[0]),
	.dataf(updown_lsb),
	.shareout(),
	.sumout(wire_counter_comb_bita_0sumout[0:0]),
	.dataa(1'b0),
	.datab(1'b0),
	.datac(1'b0),
	.datae(1'b0),
	.datag(1'b0),
	.sharein(1'b0)
	);
	defparam
		counter_comb_bita_0.extended_lut = "off",
		counter_comb_bita_0.lut_mask = 64'h000000000000FF00,
		counter_comb_bita_0.shared_arith = "off",
		counter_comb_bita_0.lpm_type = "cyclonev_lcell_comb";
	assign
		clk_en = 1'b1,
		cout = cout_actual,
		cout_actual = (((~ wire_counter_comb_bita_0cout) ^ updown_other_bits) | (time_to_clear & updown_dir)),
		data = 1'b0,
		external_cin = 1'b1,
		lsb_cin = 1'b0,
		q = safe_q,
		s_val = 1'b1,
		safe_q = counter_reg_bit,
		sclr = 1'b0,
		sload = 1'b0,
		sset = 1'b0,
		time_to_clear = 1'b0,
		updown_dir = 1'b1,
		updown_lsb = updown_dir,
		updown_other_bits = ((~ external_cin) | updown_dir);
endmodule //squeeze_fifo_cntr


//lpm_mux DEVICE_FAMILY="Cyclone V" LPM_SIZE=2 LPM_WIDTH=1 LPM_WIDTHS=1 data result sel
//VERSION_BEGIN 17.1 cbx_lpm_mux 2017:10:19:05:46:40:SJ cbx_mgl 2017:10:19:06:38:12:SJ  VERSION_END

//synthesis_resources = lut 1 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
module  squeeze_fifo_mux
	( 
	data,
	result,
	sel) /* synthesis synthesis_clearbox=1 */;
	input   [1:0]  data;
	output   [0:0]  result;
	input   [0:0]  sel;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_off
`endif
	tri0   [1:0]  data;
	tri0   [0:0]  sel;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_on
`endif

	wire	wire_l1_w0_n0_mux_dataout;
	wire  [1:0]  data_wire;
	wire  [0:0]  result_wire_ext;
	wire  [0:0]  sel_wire;

	assign		wire_l1_w0_n0_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[1] : data_wire[0];
	assign
		data_wire = {data},
		result = result_wire_ext,
		result_wire_ext = {wire_l1_w0_n0_mux_dataout},
		sel_wire = {sel[0]};
endmodule //squeeze_fifo_mux

//synthesis_resources = lut 16 M10K 3 reg 98 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
(* ALTERA_ATTRIBUTE = {"AUTO_SHIFT_REGISTER_RECOGNITION=OFF;REMOVE_DUPLICATE_REGISTERS=OFF;suppress_da_rule_internal=d101;suppress_da_rule_internal=d102;suppress_da_rule_internal=d103;SYNCHRONIZER_IDENTIFICATION=OFF;SYNCHRONIZATION_REGISTER_CHAIN_LENGTH = 1;suppress_da_rule_internal=R105;-name CUT ON -from rdptr_g -to ws_dgrp|squeeze_fifo_dffpipe123:dffpipe15|dffe16a;-name SDC_STATEMENT \"set_false_path -from *rdptr_g* -to *ws_dgrp|squeeze_fifo_dffpipe123:dffpipe15|dffe16a* \""} *)
module  squeeze_fifo_dcfifo
	( 
	aclr,
	data,
	q,
	rdclk,
	rdempty,
	rdreq,
	wrclk,
	wrreq,
	wrusedw) /* synthesis synthesis_clearbox=1 */;
	input   aclr;
	input   [47:0]  data;
	output   [95:0]  q;
	input   rdclk;
	output   rdempty;
	input   rdreq;
	input   wrclk;
	input   wrreq;
	output   [8:0]  wrusedw;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_off
`endif
	tri0   aclr;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_on
`endif

	wire  [8:0]   wire_wrptr_g_gray2bin_bin;
	wire  [8:0]   wire_ws_dgrp_gray2bin_bin;
	wire  [8:0]   wire_rdptr_g1p_q;
	wire  [8:0]   wire_wrptr_g1p_q;
	wire  [95:0]   wire_fifo_ram_q_b;
	reg	[8:0]	delayed_wrptr_g;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=HIGH"} *)
	reg	rdemp_eq_comp_lsb_aeb;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=HIGH"} *)
	reg	rdemp_eq_comp_msb_aeb;
	reg	[8:0]	rdptr_g;
	reg	wrfull_eq_comp_lsb_mux_reg;
	reg	wrfull_eq_comp_msb_mux_reg;
	(* ALTERA_ATTRIBUTE = {"suppress_da_rule_internal=S102"} *)
	reg	[9:0]	wrptr_g;
	wire  [0:0]   wire_rdaclr_q;
	wire  [8:0]   wire_rs_dgwp_q;
	wire  [0:0]   wire_wraclr_q;
	wire  [8:0]   wire_ws_brp_q;
	wire  [9:0]   wire_ws_bwp_q;
	wire  [8:0]   wire_ws_dgrp_q;
	wire	[9:0]	wire_wrusedw_sub_dataa;
	wire	[9:0]	wire_wrusedw_sub_datab;
	wire	[9:0]	wire_wrusedw_sub_result;
	wire  wire_rdempty_eq_comp1_lsb_aeb;
	wire  wire_rdempty_eq_comp1_msb_aeb;
	wire  wire_rdempty_eq_comp_lsb_aeb;
	wire  wire_rdempty_eq_comp_msb_aeb;
	wire  wire_wrfull_eq_comp1_lsb_aeb;
	wire  wire_wrfull_eq_comp1_msb_aeb;
	wire  wire_wrfull_eq_comp_lsb_aeb;
	wire  wire_wrfull_eq_comp_msb_aeb;
	wire  wire_cntr_b_cout;
	wire  [0:0]   wire_cntr_b_q;
	wire  [0:0]   wire_rdemp_eq_comp_lsb_mux_result;
	wire  [0:0]   wire_rdemp_eq_comp_msb_mux_result;
	wire  [0:0]   wire_wrfull_eq_comp_lsb_mux_result;
	wire  [0:0]   wire_wrfull_eq_comp_msb_mux_result;
	wire  int_rdempty;
	wire  int_wrfull;
	wire  [8:0]  ram_address_a;
	wire  [7:0]  ram_address_b;
	wire  [9:0]  temp_wrusedw_sub_data;
	wire  valid_rdreq;
	wire  valid_wrreq;
	wire  [8:0]  wrptr_g1s;
	wire  [8:0]  wrptr_gs;
	wire  [9:0]  ws_bwp_reg_data;

	squeeze_fifo_a_gray2bin   wrptr_g_gray2bin
	( 
	.bin(wire_wrptr_g_gray2bin_bin),
	.gray(wrptr_g[9:1]));
	squeeze_fifo_a_gray2bin   ws_dgrp_gray2bin
	( 
	.bin(wire_ws_dgrp_gray2bin_bin),
	.gray(wire_ws_dgrp_q));
	squeeze_fifo_a_graycounter   rdptr_g1p
	( 
	.aclr((~ wire_rdaclr_q)),
	.clock(rdclk),
	.cnt_en(valid_rdreq),
	.q(wire_rdptr_g1p_q));
	squeeze_fifo_a_graycounter1   wrptr_g1p
	( 
	.aclr((~ wire_wraclr_q)),
	.clock(wrclk),
	.cnt_en((valid_wrreq & wire_cntr_b_cout)),
	.q(wire_wrptr_g1p_q));
	squeeze_fifo_altsyncram   fifo_ram
	( 
	.aclr1((~ wire_rdaclr_q)),
	.address_a(ram_address_a),
	.address_b(ram_address_b),
	.addressstall_b((~ valid_rdreq)),
	.clock0(wrclk),
	.clock1(rdclk),
	.clocken1(valid_rdreq),
	.data_a(data),
	.q_b(wire_fifo_ram_q_b),
	.wren_a(valid_wrreq));
	// synopsys translate_off
	initial
		delayed_wrptr_g = 0;
	// synopsys translate_on
	always @ ( posedge wrclk or  negedge wire_wraclr_q)
		if (wire_wraclr_q == 1'b0) delayed_wrptr_g <= 9'b0;
		else  delayed_wrptr_g <= wrptr_g[9:1];
	// synopsys translate_off
	initial
		rdemp_eq_comp_lsb_aeb = {1{1'b1}};
	// synopsys translate_on
	always @ ( posedge rdclk or  negedge wire_rdaclr_q)
		if (wire_rdaclr_q == 1'b0) rdemp_eq_comp_lsb_aeb <= {1{1'b1}};
		else  rdemp_eq_comp_lsb_aeb <= wire_rdemp_eq_comp_lsb_mux_result;
	// synopsys translate_off
	initial
		rdemp_eq_comp_msb_aeb = {1{1'b1}};
	// synopsys translate_on
	always @ ( posedge rdclk or  negedge wire_rdaclr_q)
		if (wire_rdaclr_q == 1'b0) rdemp_eq_comp_msb_aeb <= {1{1'b1}};
		else  rdemp_eq_comp_msb_aeb <= wire_rdemp_eq_comp_msb_mux_result;
	// synopsys translate_off
	initial
		rdptr_g = 0;
	// synopsys translate_on
	always @ ( posedge rdclk or  negedge wire_rdaclr_q)
		if (wire_rdaclr_q == 1'b0) rdptr_g <= 9'b0;
		else if  (valid_rdreq == 1'b1)   rdptr_g <= wire_rdptr_g1p_q;
	// synopsys translate_off
	initial
		wrfull_eq_comp_lsb_mux_reg = 0;
	// synopsys translate_on
	always @ ( posedge wrclk or  negedge wire_wraclr_q)
		if (wire_wraclr_q == 1'b0) wrfull_eq_comp_lsb_mux_reg <= 1'b0;
		else  wrfull_eq_comp_lsb_mux_reg <= wire_wrfull_eq_comp_lsb_mux_result;
	// synopsys translate_off
	initial
		wrfull_eq_comp_msb_mux_reg = 0;
	// synopsys translate_on
	always @ ( posedge wrclk or  negedge wire_wraclr_q)
		if (wire_wraclr_q == 1'b0) wrfull_eq_comp_msb_mux_reg <= 1'b0;
		else  wrfull_eq_comp_msb_mux_reg <= wire_wrfull_eq_comp_msb_mux_result;
	// synopsys translate_off
	initial
		wrptr_g = 0;
	// synopsys translate_on
	always @ ( posedge wrclk or  negedge wire_wraclr_q)
		if (wire_wraclr_q == 1'b0) wrptr_g <= 10'b0;
		else if  (valid_wrreq == 1'b1)   wrptr_g <= {wire_wrptr_g1p_q, wire_cntr_b_q};
	squeeze_fifo_dffpipe   rdaclr
	( 
	.clock(rdclk),
	.clrn((~ aclr)),
	.d(1'b1),
	.q(wire_rdaclr_q));
	squeeze_fifo_alt_synch_pipe   rs_dgwp
	( 
	.clock(rdclk),
	.clrn(wire_rdaclr_q),
	.d(delayed_wrptr_g),
	.q(wire_rs_dgwp_q));
	squeeze_fifo_dffpipe   wraclr
	( 
	.clock(wrclk),
	.clrn((~ aclr)),
	.d(1'b1),
	.q(wire_wraclr_q));
	squeeze_fifo_dffpipe1   ws_brp
	( 
	.clock(wrclk),
	.clrn(wire_wraclr_q),
	.d(wire_ws_dgrp_gray2bin_bin),
	.q(wire_ws_brp_q));
	squeeze_fifo_dffpipe12   ws_bwp
	( 
	.clock(wrclk),
	.clrn(wire_wraclr_q),
	.d(ws_bwp_reg_data),
	.q(wire_ws_bwp_q));
	squeeze_fifo_alt_synch_pipe1   ws_dgrp
	( 
	.clock(wrclk),
	.clrn(wire_wraclr_q),
	.d(rdptr_g),
	.q(wire_ws_dgrp_q));
	assign
		wire_wrusedw_sub_result = wire_wrusedw_sub_dataa - wire_wrusedw_sub_datab;
	assign
		wire_wrusedw_sub_dataa = wire_ws_bwp_q,
		wire_wrusedw_sub_datab = temp_wrusedw_sub_data;
	squeeze_fifo_cmpr   rdempty_eq_comp1_lsb
	( 
	.aeb(wire_rdempty_eq_comp1_lsb_aeb),
	.dataa(delayed_wrptr_g[4:0]),
	.datab(wire_rdptr_g1p_q[4:0]));
	squeeze_fifo_cmpr1   rdempty_eq_comp1_msb
	( 
	.aeb(wire_rdempty_eq_comp1_msb_aeb),
	.dataa(delayed_wrptr_g[8:5]),
	.datab(wire_rdptr_g1p_q[8:5]));
	squeeze_fifo_cmpr   rdempty_eq_comp_lsb
	( 
	.aeb(wire_rdempty_eq_comp_lsb_aeb),
	.dataa(delayed_wrptr_g[4:0]),
	.datab(rdptr_g[4:0]));
	squeeze_fifo_cmpr1   rdempty_eq_comp_msb
	( 
	.aeb(wire_rdempty_eq_comp_msb_aeb),
	.dataa(delayed_wrptr_g[8:5]),
	.datab(rdptr_g[8:5]));
	squeeze_fifo_cmpr   wrfull_eq_comp1_lsb
	( 
	.aeb(wire_wrfull_eq_comp1_lsb_aeb),
	.dataa(rdptr_g[4:0]),
	.datab(wrptr_g1s[4:0]));
	squeeze_fifo_cmpr1   wrfull_eq_comp1_msb
	( 
	.aeb(wire_wrfull_eq_comp1_msb_aeb),
	.dataa(rdptr_g[8:5]),
	.datab(wrptr_g1s[8:5]));
	squeeze_fifo_cmpr   wrfull_eq_comp_lsb
	( 
	.aeb(wire_wrfull_eq_comp_lsb_aeb),
	.dataa(rdptr_g[4:0]),
	.datab(wrptr_gs[4:0]));
	squeeze_fifo_cmpr1   wrfull_eq_comp_msb
	( 
	.aeb(wire_wrfull_eq_comp_msb_aeb),
	.dataa(rdptr_g[8:5]),
	.datab(wrptr_gs[8:5]));
	squeeze_fifo_cntr   cntr_b
	( 
	.aset((~ wire_wraclr_q)),
	.clock(wrclk),
	.cnt_en(valid_wrreq),
	.cout(wire_cntr_b_cout),
	.q(wire_cntr_b_q));
	squeeze_fifo_mux   rdemp_eq_comp_lsb_mux
	( 
	.data({wire_rdempty_eq_comp1_lsb_aeb, wire_rdempty_eq_comp_lsb_aeb}),
	.result(wire_rdemp_eq_comp_lsb_mux_result),
	.sel(valid_rdreq));
	squeeze_fifo_mux   rdemp_eq_comp_msb_mux
	( 
	.data({wire_rdempty_eq_comp1_msb_aeb, wire_rdempty_eq_comp_msb_aeb}),
	.result(wire_rdemp_eq_comp_msb_mux_result),
	.sel(valid_rdreq));
	squeeze_fifo_mux   wrfull_eq_comp_lsb_mux
	( 
	.data({wire_wrfull_eq_comp1_lsb_aeb, wire_wrfull_eq_comp_lsb_aeb}),
	.result(wire_wrfull_eq_comp_lsb_mux_result),
	.sel(valid_wrreq));
	squeeze_fifo_mux   wrfull_eq_comp_msb_mux
	( 
	.data({wire_wrfull_eq_comp1_msb_aeb, wire_wrfull_eq_comp_msb_aeb}),
	.result(wire_wrfull_eq_comp_msb_mux_result),
	.sel(valid_wrreq));
	assign
		int_rdempty = (rdemp_eq_comp_lsb_aeb & rdemp_eq_comp_msb_aeb),
		int_wrfull = (wrfull_eq_comp_lsb_mux_reg & wrfull_eq_comp_msb_mux_reg),
		q = wire_fifo_ram_q_b,
		ram_address_a = {(wrptr_g[9] ^ wrptr_g[8]), wrptr_g[7:0]},
		ram_address_b = {(wire_rdptr_g1p_q[8] ^ wire_rdptr_g1p_q[7]), wire_rdptr_g1p_q[6:0]},
		rdempty = int_rdempty,
		temp_wrusedw_sub_data = {wire_ws_brp_q, {1{1'b0}}},
		valid_rdreq = (rdreq & (~ (int_rdempty | (~ wire_rdaclr_q)))),
		valid_wrreq = (wrreq & (~ (int_wrfull | (~ wire_wraclr_q)))),
		wrptr_g1s = {(~ wire_wrptr_g1p_q[8]), (~ wire_wrptr_g1p_q[7]), wire_wrptr_g1p_q[6:0]},
		wrptr_gs = {(~ wrptr_g[9]), (~ wrptr_g[8]), wrptr_g[7:1]},
		wrusedw = {wire_wrusedw_sub_result[8:0]},
		ws_bwp_reg_data = {wire_wrptr_g_gray2bin_bin, wrptr_g[0]};
endmodule //squeeze_fifo_dcfifo
//VALID FILE


// synopsys translate_off
`timescale 1 ps / 1 ps
// synopsys translate_on
module squeeze_fifo (
	aclr,
	data,
	rdclk,
	rdreq,
	wrclk,
	wrreq,
	q,
	rdempty,
	wrusedw)/* synthesis synthesis_clearbox = 1 */;

	input	  aclr;
	input	[47:0]  data;
	input	  rdclk;
	input	  rdreq;
	input	  wrclk;
	input	  wrreq;
	output	[95:0]  q;
	output	  rdempty;
	output	[8:0]  wrusedw;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_off
`endif
	tri0	  aclr;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_on
`endif

	wire [95:0] sub_wire0;
	wire  sub_wire1;
	wire [8:0] sub_wire2;
	wire [95:0] q = sub_wire0[95:0];
	wire  rdempty = sub_wire1;
	wire [8:0] wrusedw = sub_wire2[8:0];

	squeeze_fifo_dcfifo	squeeze_fifo_dcfifo_component (
				.aclr (aclr),
				.data (data),
				.rdclk (rdclk),
				.rdreq (rdreq),
				.wrclk (wrclk),
				.wrreq (wrreq),
				.q (sub_wire0),
				.rdempty (sub_wire1),
				.wrusedw (sub_wire2));

endmodule

// ============================================================
// CNX file retrieval info
// ============================================================
// Retrieval info: PRIVATE: AlmostEmpty NUMERIC "0"
// Retrieval info: PRIVATE: AlmostEmptyThr NUMERIC "-1"
// Retrieval info: PRIVATE: AlmostFull NUMERIC "0"
// Retrieval info: PRIVATE: AlmostFullThr NUMERIC "-1"
// Retrieval info: PRIVATE: CLOCKS_ARE_SYNCHRONIZED NUMERIC "1"
// Retrieval info: PRIVATE: Clock NUMERIC "4"
// Retrieval info: PRIVATE: Depth NUMERIC "512"
// Retrieval info: PRIVATE: Empty NUMERIC "1"
// Retrieval info: PRIVATE: Full NUMERIC "1"
// Retrieval info: PRIVATE: INTENDED_DEVICE_FAMILY STRING "Cyclone V"
// Retrieval info: PRIVATE: LE_BasedFIFO NUMERIC "0"
// Retrieval info: PRIVATE: LegacyRREQ NUMERIC "1"
// Retrieval info: PRIVATE: MAX_DEPTH_BY_9 NUMERIC "0"
// Retrieval info: PRIVATE: OVERFLOW_CHECKING NUMERIC "0"
// Retrieval info: PRIVATE: Optimize NUMERIC "2"
// Retrieval info: PRIVATE: RAM_BLOCK_TYPE NUMERIC "0"
// Retrieval info: PRIVATE: SYNTH_WRAPPER_GEN_POSTFIX STRING "1"
// Retrieval info: PRIVATE: UNDERFLOW_CHECKING NUMERIC "0"
// Retrieval info: PRIVATE: UsedW NUMERIC "1"
// Retrieval info: PRIVATE: Width NUMERIC "48"
// Retrieval info: PRIVATE: dc_aclr NUMERIC "1"
// Retrieval info: PRIVATE: diff_widths NUMERIC "1"
// Retrieval info: PRIVATE: msb_usedw NUMERIC "0"
// Retrieval info: PRIVATE: output_width NUMERIC "96"
// Retrieval info: PRIVATE: rsEmpty NUMERIC "1"
// Retrieval info: PRIVATE: rsFull NUMERIC "0"
// Retrieval info: PRIVATE: rsUsedW NUMERIC "0"
// Retrieval info: PRIVATE: sc_aclr NUMERIC "0"
// Retrieval info: PRIVATE: sc_sclr NUMERIC "0"
// Retrieval info: PRIVATE: wsEmpty NUMERIC "0"
// Retrieval info: PRIVATE: wsFull NUMERIC "0"
// Retrieval info: PRIVATE: wsUsedW NUMERIC "1"
// Retrieval info: LIBRARY: altera_mf altera_mf.altera_mf_components.all
// Retrieval info: CONSTANT: INTENDED_DEVICE_FAMILY STRING "Cyclone V"
// Retrieval info: CONSTANT: LPM_NUMWORDS NUMERIC "512"
// Retrieval info: CONSTANT: LPM_SHOWAHEAD STRING "OFF"
// Retrieval info: CONSTANT: LPM_TYPE STRING "dcfifo_mixed_widths"
// Retrieval info: CONSTANT: LPM_WIDTH NUMERIC "48"
// Retrieval info: CONSTANT: LPM_WIDTHU NUMERIC "9"
// Retrieval info: CONSTANT: LPM_WIDTHU_R NUMERIC "8"
// Retrieval info: CONSTANT: LPM_WIDTH_R NUMERIC "96"
// Retrieval info: CONSTANT: OVERFLOW_CHECKING STRING "ON"
// Retrieval info: CONSTANT: RDSYNC_DELAYPIPE NUMERIC "3"
// Retrieval info: CONSTANT: READ_ACLR_SYNCH STRING "ON"
// Retrieval info: CONSTANT: UNDERFLOW_CHECKING STRING "ON"
// Retrieval info: CONSTANT: USE_EAB STRING "ON"
// Retrieval info: CONSTANT: WRITE_ACLR_SYNCH STRING "ON"
// Retrieval info: CONSTANT: WRSYNC_DELAYPIPE NUMERIC "3"
// Retrieval info: USED_PORT: aclr 0 0 0 0 INPUT GND "aclr"
// Retrieval info: USED_PORT: data 0 0 48 0 INPUT NODEFVAL "data[47..0]"
// Retrieval info: USED_PORT: q 0 0 96 0 OUTPUT NODEFVAL "q[95..0]"
// Retrieval info: USED_PORT: rdclk 0 0 0 0 INPUT NODEFVAL "rdclk"
// Retrieval info: USED_PORT: rdempty 0 0 0 0 OUTPUT NODEFVAL "rdempty"
// Retrieval info: USED_PORT: rdreq 0 0 0 0 INPUT NODEFVAL "rdreq"
// Retrieval info: USED_PORT: wrclk 0 0 0 0 INPUT NODEFVAL "wrclk"
// Retrieval info: USED_PORT: wrreq 0 0 0 0 INPUT NODEFVAL "wrreq"
// Retrieval info: USED_PORT: wrusedw 0 0 9 0 OUTPUT NODEFVAL "wrusedw[8..0]"
// Retrieval info: CONNECT: @aclr 0 0 0 0 aclr 0 0 0 0
// Retrieval info: CONNECT: @data 0 0 48 0 data 0 0 48 0
// Retrieval info: CONNECT: @rdclk 0 0 0 0 rdclk 0 0 0 0
// Retrieval info: CONNECT: @rdreq 0 0 0 0 rdreq 0 0 0 0
// Retrieval info: CONNECT: @wrclk 0 0 0 0 wrclk 0 0 0 0
// Retrieval info: CONNECT: @wrreq 0 0 0 0 wrreq 0 0 0 0
// Retrieval info: CONNECT: q 0 0 96 0 @q 0 0 96 0
// Retrieval info: CONNECT: rdempty 0 0 0 0 @rdempty 0 0 0 0
// Retrieval info: CONNECT: wrusedw 0 0 9 0 @wrusedw 0 0 9 0
// Retrieval info: GEN_FILE: TYPE_NORMAL squeeze_fifo.v TRUE
// Retrieval info: GEN_FILE: TYPE_NORMAL squeeze_fifo.inc FALSE
// Retrieval info: GEN_FILE: TYPE_NORMAL squeeze_fifo.cmp FALSE
// Retrieval info: GEN_FILE: TYPE_NORMAL squeeze_fifo.bsf FALSE
// Retrieval info: GEN_FILE: TYPE_NORMAL squeeze_fifo_inst.v FALSE
// Retrieval info: GEN_FILE: TYPE_NORMAL squeeze_fifo_bb.v TRUE
// Retrieval info: GEN_FILE: TYPE_NORMAL squeeze_fifo_syn.v TRUE
